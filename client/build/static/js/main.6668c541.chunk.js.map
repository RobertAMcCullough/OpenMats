{"version":3,"sources":["assets/missing-avatar.png","actions/index.js","actions/types.js","components/LogInModal.js","components/SignUpModal.js","config/breakPoints.js","components/UserAvatar.js","utilities/geocoder.js","components/Header.js","components/pages/Home.js","components/pages/About.js","components/Map.js","components/pages/AllGyms.js","utilities/formatTime.js","components/CustomOpenMatCard.js","components/pages/SearchResults.js","config/days.js","components/pages/AdvancedSearch.js","components/EditButton.js","components/ConfirmDeleteModal.js","utilities/formatDate.js","components/pages/MatDetail.js","components/AddButton.js","components/pages/GymDetail.js","config/usStates.js","components/pages/Create.js","components/pages/CreateMat.js","utilities/sqlDate.js","components/pages/UpdateMat.js","components/pages/UpdateGym.js","components/pages/FailedLogin.js","components/App.js","reducers/index.js","reducers/screenResize.js","reducers/fetchTotals.js","reducers/fetchUser.js","reducers/openModal.js","reducers/refreshMap.js","reducers/infoWindow.js","reducers/setSearchOptions.js","reducers/searchOpenmats.js","reducers/newMatId.js","reducers/showOpenmat.js","reducers/searchGyms.js","reducers/showGym.js","index.js"],"names":["module","exports","openModal","modal","isOpen","type","payload","refreshMap","trueOrFalse","createOpenmat","newOpenmat","dispatch","a","async","axios","post","response","data","id","resetMatId","showOpenmat","get","details","clearPrevious","getGyms","searchResults","createGym","newGym","gym_id","newMatId","showGym","LogInModal","Button","className","variant","onClick","props","Modal","show","this","onHide","size","Body","style","width","margin","href","method","action","autoComplete","name","placeholder","required","marginTop","cursor","React","Component","connect","state","login","signup","defaultPhoto","require","UserAvatar","avatar","to","alt","height","objectFit","borderRadius","src","user","photo","onError","document","getElementById","onerror","Nav","Link","as","NavDropdown","textTransform","title","first_name","Dropdown","Item","screenSize","breakPoints","renderDesktopComponent","renderMobileComponent","geocoder","searchTerm","history","options","geocode","address","res","status","localStorage","setItem","geometry","location","lat","lng","push","alert","Header","onSearchSubmit","e","preventDefault","geoConstructor","window","google","maps","Geocoder","setState","renderSearchBar","onSubmit","onChange","target","value","aria-label","SignUpModal","navbarClass","Navbar","sticky","expand","Brand","Toggle","Collapse","renderAddNewButton","renderButtons","GoogleApiWrapper","apiKey","process","Home","submitSearch","fetchTotals","totals","mats","gyms","states","maxWidth","About","MapContainer","marker","visible","mapRendered","mapStyles","length","bounds","LatLngBounds","map","el","extend","LatLng","allGyms","refs","resultMap","fitBounds","renderMap","refreshMapProp","ind","key","position","label","toString","onMouseover","console","log","zoom","customMapStyles","initialCenter","createMarkers","renderInfoWindow","ref","withRouter","SearchResults","getItem","gymResults","forEach","gym","Map","listGyms","breakpoints","renderLargeResults","renderMediumResults","renderSmallResults","formatTime","time","slice","hour","parseInt","AMPM","CustomOpenMatCard","formatImage","imageUrl","formatCostStyles","cost","color","fontWeight","formatGiNogi","ginogi","mat","paused","day","gi_nogi","searchOpenmats","searchOptions","undefined","openMats","count","matResults","zIndex","renderResults","renderSize","JSON","stringify","AdvancedSearch","distance","timeMorning","timeDay","timeEvening","gi","nogi","free","setSearchOptions","htmlFor","min","max","textAlign","defaultValue","days","EditButton","onButtonClick","matId","gymId","formatting","buttonText","ConfirmDeleteModal","onTriggerClick","createdBy","onDeleteClick","delete","onCancelClick","d","date","Date","MatDetail","formatSize","formatCost","formatCallFirst","call","match","params","formatDate","last_updated","mat_created_by","scope","street","city","phone","call_first","notes","renderFooter","fontSize","renderDetails","matDetails","AddButton","GymDetail","website","renderHeader","renderTable","renderLarge","renderMedium","renderSmall","gymDetails","Create","openmat","selectedGym","selectedGymName","onFormSubmit","obj","interval","setInterval","clearInterval","onSelectedGymChange","flex","disabled","renderGymOptions","newGymFields","flexBasis","usStates","renderLargeForm","renderMediumForm","renderSmallForm","renderSelectGymButton","renderForm","MSTdate","setHours","getHours","toISOString","replace","UpdateMat","openMat","matDetailsSetToState","updateOpenmat","last_updated_by","sqlDate","val","updatedMat","put","UpdateGym","gymDetailsSetToState","updateGym","gym_created_by","updatedGym","FailedLogin","App","addEventListener","screenResize","innerWidth","fetchUser","path","component","exact","AllGyms","CreateMat","combineReducers","infoWindow","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.6668c541.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/missing-avatar.d77f2493.png\";","import axios from 'axios'\n\nimport { SCREEN_RESIZE, FETCH_TOTALS, FETCH_USER, OPEN_MODAL, REFRESH_MAP, INFO_WINDOW, SET_SEARCH_OPTIONS, SEARCH_OPENMATS, CREATE_OPENMAT, SHOW_OPENMAT, SEARCH_GYMS, SHOW_GYM, RESET_MAT_ID, CLEAR_PREVIOUS, UPDATE_OPENMAT, UPDATE_GYM } from './types'\n\n\n//stores the width of the current display in pixels for use in responsive componenets\nexport const screenResize = width => {\n    return({\n        type: SCREEN_RESIZE,\n        payload: width\n    })\n}\n\n//fetches number of openmats, gyms, and US states for home screen\n//thunk returns a promise which is manually dispatched\nexport const fetchTotals = () => async dispatch => {\n    const totals = await axios.get('/api/totals')\n\n    dispatch({\n        type: FETCH_TOTALS,\n        payload: totals\n    })\n}\n\n//get currently logged in user using redux-thunk\nexport const fetchUser = () => async dispatch => {\n    const user = await axios.get('/auth/current_user')\n\n    dispatch({\n        type: FETCH_USER,\n        payload: user\n    })\n}\n\n//switches open states of signup and login modals\n//modal arg is either 'signup', 'login' or 'delete', isOpen arg is boolean\nexport const openModal = (modal, isOpen) => {\n    return({\n        type: OPEN_MODAL,\n        payload: ([modal, isOpen])\n\n    })\n}\n\n\n//if refreshMap is ever set to true, the map will be refreshed, this is done when resorting list\n//anytime refreshMap is set to true, it must be set back to false right after the map is updated so it doesn't keep updating which has a fee associated with it\nexport const refreshMap = (trueOrFalse) => {\n\n    return({\n        payload: trueOrFalse,\n        type: REFRESH_MAP\n    })\n}\n\n//indicates the infoWindow that should be active on google map due to hovering on marker\nexport const infoWindow = (id) => {\n    return({\n        payload: id,\n        type: INFO_WINDOW\n    })\n}\n\n//stores advanced search options. an empty object means there are no advanced search options requested by the user\nexport const setSearchOptions = options => {\n    return({\n        payload: options,\n        type: SET_SEARCH_OPTIONS\n    })\n}\n\n/////////////////////////////////////////\n// OPENMAT CRUD ACTION CREATORS\n\n//queries the api for a list of openmats\n//'options' argument is optional and only used with advanced search options\nexport const searchOpenmats = options => async dispatch => {\n    const lat = localStorage.getItem('lat')\n    const lng = localStorage.getItem('lng')\n\n    let searchResults\n\n    if(!options || !options.searchTerm){\n        searchResults = await axios.get(`/api/openmats?lat=${lat}&lng=${lng}`)\n    }else{\n        searchResults = await axios.get(`/api/openmats?lat=${lat}&lng=${lng}&options=${JSON.stringify(options)}`)\n    }\n\n    dispatch({\n        payload: searchResults.data,\n        type: SEARCH_OPENMATS \n    })\n}\n\n//handled by newMatId reducer\nexport const createOpenmat = newOpenmat => async dispatch => {\n    //response will either be id of the newly created openmat, or -1 if there was a problem inserting data\n    const response = await axios.post('/api/openmats',newOpenmat)\n    \n    dispatch({\n        payload: response.data.id,\n        type: CREATE_OPENMAT\n    })\n}\n\n//just resets the 'newMatId' variable in state, which is used for redirecting after a mat is created or updated\n//handled by newMatId reducer\nexport const resetMatId = () => {\n    return({\n        payload: null,\n        type: RESET_MAT_ID\n    })\n}\n\nexport const showOpenmat = id => async dispatch => {\n    //response will be all the info about one open mat\n    const response = await axios.get(`/api/openmats/${id}`)\n\n    let details = response.data\n\n    details.id=id //make sure the openmat id and not the gym id is set here\n\n    dispatch({\n        payload: details,\n        type: SHOW_OPENMAT\n    })\n}\n\n//resets 'matDetails' and 'gymDetails' variables in state, so they don't show while waiting for a new search to return\n//handled by 'showOpenMat' and 'showGym' reducers\nexport const clearPrevious = () => {\n    return({\n        payload: null,\n        type: CLEAR_PREVIOUS\n    })\n}\n\n//handled by newMat reducer\nexport const updateOpenmat = updatedMat => async dispatch => {\n\n    await axios.put(`/api/openmats/${updatedMat.id}`, updatedMat)\n\n    return({\n        payload: updatedMat.id,\n        type: UPDATE_OPENMAT\n    })\n}\n\n\n/////////////////////////////////////////\n// GYM CRUD ACTION CREATORS\n\n\n// get list of all gyms\nexport const getGyms = () => async dispatch => {\n\n    const searchResults = await axios.get(`/api/gyms`)\n\n    dispatch({\n        payload: searchResults.data,\n        type: SEARCH_GYMS\n    })\n}\n\n//this creates a new gym and then creates a new open mat to go with it\n//handled by newMatId reducer\nexport const createGym = (newGym, newOpenmat) => async dispatch => {\n\n    //first create a new gym\n    //response will either be id of the newly created gym, or -1 if there was a problem inserting data\n    const response = await axios.post('/api/gyms',newGym)\n\n    //next create openmat with gym's id\n    const newMatId = await axios.post('/api/openmats',{...newOpenmat, gym_id:response.data.id})\n\n    dispatch({\n        payload: newMatId.data.id,\n        type: CREATE_OPENMAT\n    })\n}\n\nexport const showGym = id => async dispatch => {\n    //response will be an array of all the open mats associated with one gym, plus the gym data\n    const response = await axios.get(`/api/gyms/${id}`)\n\n    dispatch({\n        payload: response.data,\n        type: SHOW_GYM\n    })\n}\n\n//handled by newMat reducer\nexport const updateGym = updatedGym => async dispatch => {\n    const response = await axios.put(`/api/gyms/${updatedGym.id}`, updatedGym)\n\n    dispatch({\n        payload: updatedGym.id,\n        type: UPDATE_GYM\n    })\n}","export const SCREEN_RESIZE = 'SCREEN_RESIZE'\nexport const FETCH_TOTALS = 'FETCH_TOTALS'\nexport const FETCH_USER = 'FETCH_USER'\nexport const OPEN_MODAL = 'OPEN_MODAL'\nexport const REFRESH_MAP = 'REFRESH_MAP'\nexport const INFO_WINDOW = 'INFO_WINDOW'\nexport const SEARCH_OPENMATS = 'SEARCH_OPENMATS'\nexport const CREATE_OPENMAT = 'CREATE_OPENMAT'\nexport const SHOW_OPENMAT = 'SHOW_OPENMAT'\nexport const SEARCH_GYMS = 'SEARCH_GYMS'\nexport const SHOW_GYM = 'SHOW_GYM'\nexport const RESET_MAT_ID = 'RESET_MAT_ID'\nexport const CLEAR_PREVIOUS = 'CLEAR_PREVIOUS'\nexport const UPDATE_OPENMAT = 'UPDATE_OPENMAT'\nexport const UPDATE_GYM = 'UPDATE_GYM'\nexport const SET_SEARCH_OPTIONS = 'SET_SEARCH_OPTIONS'","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nimport { openModal } from '../actions'\r\n\r\nclass LogInModal extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Button className='my-1' variant=\"primary\" onClick={()=>this.props.openModal('login', true)}>\r\n              Log in\r\n            </Button>\r\n      \r\n            <Modal show={this.props.isOpen} onHide={()=>this.props.openModal('login', false)} size='md'>\r\n                <Modal.Body>\r\n                    <div className='text-center' style={{width:'60%', margin:'0 auto'}}>                                    \r\n                        <h1 className='mt-4 mb-3'>Log In</h1>\r\n                        <p className='mb-4'>Welcome back. Log in below.</p>\r\n                        <a className=\"btn btn-block btn-social btn-google text-center\" href='/auth/google'><span className=\"fab fa-google\"></span> Log in with Google</a>\r\n                        {/* <a className=\"btn btn-block btn-social btn-facebook text-center\" href='/auth/facebook'><span className=\"fab fa-facebook-f\"></span> Log in with Facebook</a> */}\r\n                        <div className='mt-4 mb-4'>\r\n                            <p className='hr-centered'><span>OR</span></p>\r\n                        </div>\r\n                        <form method='post' action='/auth/login' autoComplete='off'>\r\n                            <div className='form-group'>\r\n                                <input className='form-control' name='username' type='text' placeholder='Username' required/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <input className='form-control' name='password' type='password' placeholder='Password' required/>\r\n                            </div>\r\n                            <button className='btn btn-primary' type='submit' style={{width:'100%'}}>Log In</button>\r\n                        </form>\r\n                        <div style={{marginTop:'20px'}}><button className='button-link' style={{cursor:'pointer'}} onClick={()=>this.props.openModal('signup',true)}>Need to create an account?</button></div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        isOpen: state.openModal.login\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{openModal})(LogInModal)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nimport { openModal } from '../actions'\r\n\r\nclass LogInModal extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Button className='my-1' variant=\"primary\" onClick={()=>this.props.openModal('signup', true)}>\r\n              Sign Up\r\n            </Button>\r\n      \r\n            <Modal show={this.props.isOpen} onHide={()=>this.props.openModal('signup', false)} size='md'>\r\n                <Modal.Body>\r\n                    <div className='text-center' style={{width:'60%', margin:'0 auto'}}>                                    \r\n                        <h1 className='mt-4 mb-3'>Sign Up</h1>\r\n                        <p className='mb-4'>Welcome. Sign up below.</p>\r\n                        <a className=\"btn btn-block btn-social btn-google text-center\" href='/auth/google'><span className=\"fab fa-google\"></span> Sign up with Google</a>\r\n                        {/* <a className=\"btn btn-block btn-social btn-facebook text-center\" href='/auth/facebook'><span className=\"fab fa-facebook-f\"></span> Sign up with Facebook</a> */}\r\n                        <div className='mt-4 mb-4'>\r\n                            <p className='hr-centered'><span>OR</span></p>\r\n                        </div>\r\n                        <form method='post' action='/auth/signup' autoComplete='off'>\r\n                            <div className='form-group'>\r\n                                <input className='form-control' name='username' type='text' placeholder='Username' required/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <input className='form-control' name='password' type='password' placeholder='Password' required/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                    <input className='form-control' name='firstName' type='text' placeholder='First Name'/>\r\n                                </div>\r\n                            <button className='btn btn-primary' type='submit' style={{width:'100%'}}>Sign Up</button>\r\n                        </form>\r\n                        <div style={{marginTop:'20px'}}><button className='button-link' style={{cursor:'pointer'}} onClick={()=>this.props.openModal('login',true)}>Already have an account?</button></div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        isOpen: state.openModal.signup\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{openModal})(LogInModal)","//defines breakpoints for responsive design\r\n\r\nexport default {\r\n    small: 768,\r\n    medium: 992,\r\n    large: 1200\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavDropdown, Dropdown, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport breakPoints from '../config/breakPoints'\r\n\r\n// const defaultPhoto = 'https://i.imgur.com/V5uVYsb.png'\r\nconst defaultPhoto = require('../assets/missing-avatar.png')\r\n\r\nclass UserAvatar extends React.Component{\r\n    \r\n    avatar = (\r\n        <Link className='d-flex align-items-center' to='/profile'>\r\n            <img alt='Profile' id='profilePictureAvatar' style={{height:'2.5rem', width:'2.5rem', objectFit:'cover', borderRadius:'100px'}} src={this.props.user.photo ? this.props.user.photo : defaultPhoto} onError={()=>{document.getElementById('profilePictureAvatar').src=defaultPhoto;document.getElementById('profilePictureAvatar').onerror=null}}/>\r\n        </Link>\r\n    )\r\n\r\n    renderMobileComponent(){\r\n        return(\r\n            <>\r\n            <Nav.Link as={Link} to='/advancedSearch'>Search</Nav.Link>\r\n            {/* <Nav.Link as={Link} to='/profile'>Profile</Nav.Link>\r\n            <Nav.Link as={Link} to='/settings'>Settings</Nav.Link> */}\r\n            <Nav.Link href='/auth/logout'>Log Out</Nav.Link>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderDesktopComponent(){\r\n        return(\r\n            <div className='d-flex'>\r\n                {this.avatar}\r\n                <NavDropdown style={{textTransform:'capitalize'}} title={this.props.user.first_name ? this.props.user.first_name : 'User'}>\r\n                    {/* <Dropdown.Item as={Link} to='/profile'>Profile</Dropdown.Item>\r\n                    <Dropdown.Item as={Link} to='/settings'>Settings</Dropdown.Item> */}\r\n                    <Dropdown.Item href='/advancedSearch'>Search</Dropdown.Item>\r\n                    <Dropdown.Item href='/auth/logout'>Log Out</Dropdown.Item>\r\n                </NavDropdown>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.props.screenSize > breakPoints.small ? this.renderDesktopComponent() : this.renderMobileComponent()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        user: state.user,\r\n        screenSize: state.screenSize\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(UserAvatar)","//this is used for the 2 search bars - one on home screen and one on nav bar. geocoding is also done separately in the Create componant when a new gym is created\r\n//accepts 3 arguments - first is geocoder (created by 'geocoder = new window.google.maps.Geocoder()'), second is search term, third is history, so use can be navigated to search results page after geocoding is done, where componentDidMount will execute search.  Component that calls this function must be using GoogleAPIWrapper.\r\n\r\n//results are set to localStorage instead of redux store so they are still available after a page refresh\r\nexport default (geocoder, searchTerm, history, options) =>{\r\n    geocoder.geocode({address: searchTerm}, (res, status)=>{\r\n        //store the search data on local storage so it isn't cleared when back arrow/refresh is pressed\r\n        localStorage.setItem('searchTerm', searchTerm)\r\n        localStorage.setItem('searchStatus', status)\r\n        if(status==='OK'){ //prevents error if google cannot find a location associated with search term\r\n            localStorage.setItem('lat', res[0].geometry.location.lat())\r\n            localStorage.setItem('lng', res[0].geometry.location.lng())\r\n            history.push('/openmats')\r\n        }else{\r\n            alert('Problem with search, please try again.')\r\n        }\r\n    })\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { GoogleApiWrapper } from 'google-maps-react'\r\n\r\nimport { refreshMap, openModal } from '../actions'\r\n\r\nimport LogInModal from './LogInModal'\r\nimport SignUpModal from './SignUpModal'\r\nimport UserAvatar from './UserAvatar'\r\n\r\nimport breakPoints from '../config/breakPoints'\r\nimport geocoder from '../utilities/geocoder'\r\n\r\n// const logo = require('../assets/logo.jpg')\r\n\r\nclass Header extends React.Component {\r\n    state={\r\n        searchTerm: ''\r\n    }\r\n\r\n    onSearchSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        //this makes sure the map is rerendered on subsequent searches, otherwise it will be centered on the last search\r\n        this.props.refreshMap(true)\r\n\r\n        //do geocoding, results are set to localStorage\r\n        let geoConstructor = new window.google.maps.Geocoder()\r\n        geocoder(geoConstructor, this.state.searchTerm, this.props.history)\r\n        this.setState({searchTerm:''})\r\n    }\r\n\r\n    renderAddNewButton(){\r\n        //require that user be logged in to add a new open mat\r\n        if(!this.props.user) return <Nav.Link as={Link} to='/' onClick={()=>this.props.openModal('login',true)}>Add A New Open Mat</Nav.Link>\r\n        else return <Nav.Link as={Link} to='/openmats/new'>Add A New Open Mat</Nav.Link>\r\n    }\r\n\r\n    renderButtons(){\r\n        const renderSearchBar = () => {\r\n            if(this.props.screenSize > breakPoints.medium){\r\n                return(\r\n                    <form className=\"form-inline my-2 my-lg-0\" onSubmit={e=>this.onSearchSubmit(e)} autoComplete='off'>\r\n                        <input className=\"form-control mr-sm-2\" onChange={e=>{this.setState({'searchTerm':e.target.value})}} value={this.state.searchTerm} type=\"search\" placeholder=\"Enter Location\" aria-label=\"Search\" required></input>\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0 mr-4\" type=\"submit\">Search</button>\r\n                    </form>\r\n                )\r\n            }\r\n        }\r\n\r\n        if(!this.props.user){\r\n            return(\r\n                <>\r\n                    {renderSearchBar()}\r\n                    <LogInModal/>\r\n                    <span className='mx-1'></span>\r\n                    <SignUpModal/>\r\n                </>\r\n            )\r\n        }else{\r\n            return(\r\n                <>\r\n                    {renderSearchBar()}\r\n                    <UserAvatar/>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    navbarClass(){\r\n        return this.props.screenSize > breakPoints.small ? 'mb-4' : 'mb-2'\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={this.navbarClass()}>\r\n                <Navbar sticky='top' expand='md'>\r\n                    <Navbar.Brand as={Link} to='/'>\r\n                        {/* <img alt='' src={logo} width='50' height='50' className='d-inline-block'/>\r\n                        {' '} */}\r\n                        OpenMats.org\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle/>\r\n                    <Navbar.Collapse>\r\n                        <Nav className='mr-auto'>\r\n                            {this.renderAddNewButton()}\r\n                        </Nav>\r\n                        <Nav>\r\n                            {this.renderButtons()}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        screenSize: state.screenSize,\r\n        user: state.user\r\n    })\r\n}\r\nconst googleMapsKey = process.env.NODE_ENV==='production' ? process.env.REACT_APP_googleMapsAPIKey : process.env.REACT_APP_googleMapsAPIKey_dev\r\n\r\n\r\nexport default connect(mapStateToProps, { refreshMap, openModal})(GoogleApiWrapper({apiKey:googleMapsKey})(Header))","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { GoogleApiWrapper } from 'google-maps-react'\n\nimport { refreshMap, fetchTotals } from '../../actions'\nimport geocoder from '../../utilities/geocoder'\n\nclass Home extends React.Component {\n    state = {searchTerm : ''}\n\n    componentDidMount(){\n        document.title = \"OpenMats.org | Search\"\n        //fetch total numbers of gyms, mats, states\n        this.props.fetchTotals();\n        // localStorage.setItem('searchTerm', '')\n        // localStorage.setItem('searchStatus', '')\n        // localStorage.setItem('lat', null)\n        // localStorage.setItem('lng', null)\n    }\n\n    submitSearch = e => {\n        e.preventDefault()\n\n        //this makes sure the map is rerendered on subsequent searches, otherwise it will be centered on the last search\n        this.props.refreshMap(true)\n\n        //do geocoding, results are set to localStorage\n        let geoConstructor = new window.google.maps.Geocoder()\n        geocoder(geoConstructor, this.state.searchTerm, this.props.history)\n    }\n\n    render(){\n        return(\n            <div className=\"jumbotron text-center\">\n                <h1 className={this.props.screenSize < 410 ? 'display-5' :'display-4'}>Welcome to OpenMats.org</h1>\n                <p className=\"lead mt-3\">Working hard to become the internet's largest database of Brazilian Jiu Jitsu open mats.</p>\n                <p className=\"lead mt-3\">(Please help us by adding your gym!)</p>\n                <Link to=\"/allgyms\" className=\"lead mt-3 font-weight-bold\">Currently {this.props.totals.mats} open mats at {this.props.totals.gyms} gyms in {this.props.totals.states} cities.</Link>\n                <p className=\"lead text-danger mt-3 font-weight-bold\">Many gyms currently have restrictions around COVID-19, please call or email before arriving.</p>\n                {/* <p className=\"lead mt-3\">All listings have been updated to reflect COVID-19 changes.</p> */}\n                <hr className=\"my-4\"></hr>\n                <form className=\"form my-2 my-lg-0 justify-content-center mx-auto\" style={{maxWidth:'600px'}} value={this.state.searchTerm} onChange={e=>{this.setState({searchTerm:e.target.value})}} onSubmit={e=>{this.submitSearch(e)}}>\n                    <input className=\"form-control form-control-lg mr-sm-2\" type=\"search\" placeholder={this.props.screenSize > 500 ? \"Enter a location to search for open mats...\" : \"Enter a search location...\"} aria-label=\"Search\" required></input>\n                    <button className=\"btn btn-lg btn-primary my-3\" type=\"submit\">Search</button>\n                </form>\n                <Link to='/advancedSearch'>Advanced Search Options</Link>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return({\n        screenSize: state.screenSize,\n        totals: state.totals\n    })\n}\n\nconst googleMapsKey = process.env.NODE_ENV==='production' ? process.env.REACT_APP_googleMapsAPIKey : process.env.REACT_APP_googleMapsAPIKey_dev\n\nexport default connect(mapStateToProps,{ refreshMap, fetchTotals })(GoogleApiWrapper({apiKey:googleMapsKey})(Home))","import React from 'react'\r\n\r\nclass About extends React.Component{\r\n    componentDidMount(){\r\n        document.title = 'OpenMats.org | About'\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <hr></hr>\r\n                <div>\r\n                    <p>OpenMats.org was built on a SERN stack (MySQL, Express.js, React, Node.js) by <a href='https://github.com/RobertAMcCullough'>Bob McCullough</a>.</p>\r\n                    <p>Other technologies used include Redux, Google's Geocoding and Maps Javascript APIs, Bootstrap, and Passport.js (Google, Facebook, and Local authentication strategies).</p>\r\n                    <p>Contact Bob via <a href='mailto: robertamccullough@gmail.com'>email</a>.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { refreshMap } from '../actions'\r\n\r\n//pass array of gyms in as props\r\nclass MapContainer extends React.Component {\r\n    state={ name: '', marker: {}, visible: false}\r\n\r\n    mapRendered=false //used in componentDidMount and componentDidUpdate\r\n\r\n    renderMap(){\r\n        if(this.props.gyms.length>0) this.mapRendered=true //in some cases, gym data won't be available when component mounts, and if it doesn't then the code from componentDidMount will run in componenentDidUpdate\r\n        if(this.props.gyms.length===1) return //if there is only one marker, don't adjust size of the map\r\n\r\n        //this sizes the map to fit all the markers\r\n        const bounds = new window.google.maps.LatLngBounds()\r\n        this.props.gyms.map((el)=>{\r\n            bounds.extend(new window.google.maps.LatLng(\r\n                el.lat,\r\n                el.lng\r\n            ))\r\n            return null\r\n        })\r\n\r\n        if(!this.props.allGyms) this.refs.resultMap.map.fitBounds(bounds)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.renderMap()\r\n    }\r\n\r\n    componentDidUpdate(){     \r\n        //don't need to run the following code if it was run in componentDidMount\r\n        if(this.mapRendered===false || this.props.refreshMapProp===true){\r\n            this.mapRendered=true;\r\n            this.props.refreshMap(false) //this makes sure the map isn't refreshed again a second time\r\n\r\n            this.renderMap()\r\n        }\r\n\r\n    }\r\n\r\n    mapStyles = {\r\n        width:'100%',\r\n        height: '60vh'\r\n    }\r\n\r\n    createMarkers(){\r\n\r\n        return this.props.gyms.map((e,ind)=>{\r\n\r\n            return <Marker \r\n                key={e.id} \r\n                id={e.id} \r\n                position={{lat: e.lat, lng:e.lng}}\r\n                label={this.props.gyms.length===1 ? '' : (ind+1).toString()} //doesn't add a label when there is only one gym\r\n                onClick={(props)=>{this.props.history.push(`/gyms/${props.id}`)}}\r\n                onMouseover={(props, marker)=>{if(this.state.name!==e.name){this.setState({name: e.name, marker: marker, visible: true})}}}\r\n            >\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n    renderInfoWindow(){\r\n        if(this.props.gyms.length===1) return\r\n\r\n        return(\r\n            <InfoWindow marker={this.state.marker} visible={this.state.visible}>\r\n                <div>\r\n                    <h5>{this.state.marker.label}. {this.state.name}</h5>\r\n                </div>\r\n            </InfoWindow>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        //sets map when all gyms are listed\r\n        if(this.props.allGyms){\r\n            console.log('this one')\r\n            return(\r\n                <Map \r\n                google={this.props.google}\r\n                zoom={this.props.zoom}\r\n                style={this.props.customMapStyles ? this.props.customMapStyles : this.mapStyles}\r\n                initialCenter={{lat: 39, lng: -97}} //only applies when there is one mat and componentDidMount is bypassed\r\n                onClick={()=>{this.setState({name: '', visible: false})}}\r\n                // onReady={()=>{console.log('MAP READY')}}\r\n            >\r\n            {this.createMarkers()}\r\n            {this.renderInfoWindow()}\r\n            </Map>\r\n            )\r\n        }\r\n        //else return map of subset of all gyms\r\n        return(\r\n            <Map \r\n                google={this.props.google}\r\n                ref='resultMap'\r\n                zoom={11} //only applies when there is one gym and componentDidMount is bypassed\r\n                style={this.props.customMapStyles ? this.props.customMapStyles : this.mapStyles}\r\n                initialCenter={this.props.gyms[0] ? {lat: this.props.gyms[0].lat, lng: this.props.gyms[0].lng} : {lat: 0, lng: 0}} //only applies when there is one mat and componentDidMount is bypassed\r\n                onClick={()=>{this.setState({name: '', visible: false})}}\r\n                // onReady={()=>{console.log('MAP READY')}}\r\n            >\r\n            {this.createMarkers()}\r\n            {this.renderInfoWindow()}\r\n            </Map>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        user: state.user,\r\n        refreshMapProp: state.refreshMap\r\n    })\r\n}\r\n\r\nconst googleMapsKey = process.env.NODE_ENV==='production' ? process.env.REACT_APP_googleMapsAPIKey : process.env.REACT_APP_googleMapsAPIKey_dev\r\n\r\nexport default connect(mapStateToProps,{refreshMap})(GoogleApiWrapper({apiKey:googleMapsKey})(withRouter(MapContainer)))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getGyms, refreshMap } from '../../actions'\r\n\r\nimport Map from '../Map'\r\n\r\nimport breakpoints from '../../config/breakPoints'\r\n\r\nclass SearchResults extends React.Component {\r\n    searchTerm = localStorage.getItem('searchTerm')\r\n\r\n    componentDidMount(){\r\n        document.title = \"OpenMats.org | All Gyms\"\r\n        this.props.refreshMap(true)\r\n        this.props.getGyms()\r\n    }\r\n\r\n    //produces a list of gyms to pass to Maps component\r\n    listGyms(){\r\n\r\n        let gymResults= [] //will store an array of objects, each object has a 'id', 'lat', 'lng' and 'name' key\r\n\r\n        this.props.gyms.forEach(gym=>{\r\n            gymResults.push({name: gym.name, id:gym.id, lat: gym.lat, lng: gym.lng})\r\n        })\r\n\r\n        return gymResults\r\n    }\r\n\r\n    renderLargeResults(){\r\n        return(\r\n            <>\r\n                <div className='container-fluid'>\r\n                    <div className='display-4 text-center my-4'>{this.props.gyms.length ? `All Gyms (${this.props.gyms.length})` : 'All Gyms'}</div>\r\n                    <div><Map gyms={this.listGyms()} allGyms={true} customMapStyles={{width:\"75%\", height:\"70%\"}} zoom={4}/></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderMediumResults(){\r\n        return(\r\n            <>\r\n                <div className='container-fluid'>\r\n                <h4 className='text-center my-4'>{this.props.gyms.length ? `All Gyms (${this.props.gyms.length})` : 'All Gyms'}</h4>\r\n                    <div><Map gyms={this.listGyms()} allGyms={true} customMapStyles={{width:\"75%\", height:\"70%\"}} zoom={3.75}/></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderSmallResults(){\r\n        return(\r\n            <>\r\n                <div className='container-fluid'>\r\n                    <h4 className='text-center my-4'>{this.props.gyms.length ? `All Gyms (${this.props.gyms.length})` : 'All Gyms'}</h4>\r\n                    <div><Map gyms={this.listGyms()} allGyms={true} customMapStyles={{width:\"75%\", height:\"70%\"}} zoom={2.9}/></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.props.screenSize>breakpoints.medium) return this.renderLargeResults()\r\n        if(this.props.screenSize>breakpoints.small) return this.renderMediumResults()\r\n        else return this.renderSmallResults()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        gyms: state.gyms,\r\n        screenSize: state.screenSize\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{ getGyms, refreshMap })(SearchResults)","const formatTime = time => {\r\n    time = time.slice(0,5) //remove seconds\r\n    \r\n    let hour = parseInt(time.slice(0,2))    //get hour\r\n\r\n    const AMPM = hour < 12 ? ' AM' : ' PM' //get AM or PM (noon is 12 PM)\r\n\r\n    hour = hour > 12 ? hour - 12 : hour //format hour\r\n\r\n    time = hour.toString() + time.slice(2,5) + AMPM //add hour and add AM or PM\r\n\r\n    return time\r\n}\r\n\r\nexport default formatTime","//This is custom card to be used instead of the Bootstrap card\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport formatTime from '../utilities/formatTime'\r\n\r\nclass CustomOpenMatCard extends React.Component {\r\n\r\n    formatImage = imageUrl => {\r\n        if(imageUrl){\r\n            return(\r\n                <img style={{width:'100%', height:'100%', objectFit:'cover'}} src={imageUrl} \r\n                onError={(e)=>{e.target.onerror=null;e.target.src='https://i.imgur.com/PaAB0sq.jpg'}} alt='gym'></img>\r\n            )\r\n        }else{\r\n            // return <div>\r\n            //     <h5 className=\"text-center\">{this.props.mat.name}</h5>\r\n            // </div>\r\n            return(\r\n                <img style={{width:'100%', height:'100%', objectFit:'cover'}} src={'https://i.imgur.com/PaAB0sq.jpg'} alt='gym'></img>\r\n            )\r\n        }\r\n    }\r\n\r\n    formatCostStyles = cost => {\r\n        if(cost === null) return {color: 'white'} //makes the text invisible if unknown\r\n        return cost===0 ? {color:'green', fontWeight:'bold'} : {color:'red', fontWeight:'bold'}\r\n    }\r\n\r\n    formatGiNogi = ginogi => {\r\n        switch(ginogi){\r\n            case(1):\r\n                return 'Gi'\r\n            case(2):\r\n                return 'No-Gi'\r\n            case(3):\r\n                return 'Gi/No-Gi'\r\n            case(4):\r\n                return 'Gi/No-Gi'\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.props.size==='small'){\r\n            //small card\r\n            return(\r\n                <div className='d-flex mb-2 border' style={{width:'100%', height:'8rem'}}>\r\n                    <Link to={`/gyms/${this.props.mat.gym_id}`} className='plain-link' style={{width:'30%'}}>\r\n                        <div className='border-right' style={{height:'100%'}}>\r\n                            {this.formatImage(this.props.mat.photo)}\r\n                            {/* <img style={{width:'100%', height:'100%', objectFit:'cover'}} src={this.props.mat.photo} alt='gym'></img> */}\r\n                        </div>\r\n                    </Link>\r\n                    <Link to={`/openmats/${this.props.mat.id}`} className={this.props.mat.paused ? 'plain-link covid' : 'plain-link'} style={{width:'69%'}}>\r\n                        <div className='p-2'>\r\n                            <div className='d-flex flex-column justify-content-between'>\r\n                                <h5>{this.props.mat.day} - {formatTime(this.props.mat.time)}</h5>\r\n                                <p>{this.props.mat.name}</p>\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <p className='pr-5' style={this.formatCostStyles(this.props.mat.cost)}>{this.props.mat.cost === 0 ? 'FREE' : `$${this.props.mat.cost}`}</p>\r\n                                <p style={{fontWeight:'bold'}}>{this.formatGiNogi(this.props.mat.gi_nogi)}</p>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n        //normal size card\r\n        else return(\r\n                <div className='d-flex mb-2 border' style={{width:'100%', height:'8rem'}}>\r\n                    <Link to={`/gyms/${this.props.mat.gym_id}`} className='plain-link' style={{width:'30%'}}>\r\n                        <div className='border-right' style={{height:'100%'}}>\r\n                            {this.formatImage(this.props.mat.photo)}\r\n                            {/* <img style={{width:'100%', height:'100%', objectFit:'cover'}} src={this.props.mat.photo} alt='gym'></img> */}\r\n                        </div>\r\n                    </Link>\r\n                    <Link to={`/openmats/${this.props.mat.id}`} className={this.props.mat.paused ? 'plain-link covid' : 'plain-link'} style={{width:'69%'}}>\r\n                        <div className='p-2'>\r\n                            <div className='d-flex justify-content-between'>\r\n                                <h5>{this.props.mat.day} - {formatTime(this.props.mat.time)}</h5>\r\n                                <p>{this.props.mat.name}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p style={this.formatCostStyles(this.props.mat.cost)}>{this.props.mat.cost === 0 ? 'FREE' : `$${this.props.mat.cost}`}</p>\r\n                                <p style={{fontWeight:'bold'}}>{this.formatGiNogi(this.props.mat.gi_nogi)}</p>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomOpenMatCard","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { searchOpenmats, getGyms, refreshMap } from '../../actions'\r\n\r\nimport CustomOpenMatCard from '../CustomOpenMatCard'\r\nimport Map from '../Map'\r\n\r\nimport breakpoints from '../../config/breakPoints'\r\n\r\nclass SearchResults extends React.Component {\r\n    searchTerm = localStorage.getItem('searchTerm')\r\n\r\n    componentDidMount(){\r\n        document.title = \"OpenMats.org | Search Results\"\r\n        this.props.searchOpenmats(this.props.searchOptions)\r\n        this.props.getGyms()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //this monitors for changes to the seach term, which happens when a search is done from the header. this will cause the search results to refresh\r\n        if(this.searchTerm!==localStorage.getItem('searchTerm')){\r\n            this.searchTerm = localStorage.getItem('searchTerm')\r\n            this.props.searchOpenmats()\r\n        }\r\n    }\r\n\r\n    renderGyms(){\r\n        if(this.props.openMats === undefined) return null\r\n\r\n        let gymResults= [] //will store an array of objects, each object has a 'name' and 'count' and 'id' key, which counts how many mats each gym has and stores name and gym_id\r\n\r\n        this.props.openMats.forEach(mat=>{\r\n            let newGym = true //gets set to false if the gym is found in the gymResults array\r\n            gymResults.forEach(gym=>{\r\n                if(gym.name===mat.name){\r\n                    gym.count++\r\n                    // gym.id=mat.gym_id\r\n                    newGym=false\r\n                }\r\n            })\r\n            if(newGym===true){ //if gym is not found in the gymResults array, add it\r\n                gymResults.push({name: mat.name, count:1, id:mat.gym_id})\r\n            }\r\n        })\r\n\r\n        return(\r\n            <div className='mb-3'>\r\n                Open Mats Found at:\r\n                {gymResults.map(el=>{\r\n                    return(\r\n                        <div className='my-1' key={el.id}>\r\n                            <Link className='plain-link' to={`/gyms/${el.id}`}>{el.name} ({el.count})</Link>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //produces a list of gyms from props.openMats to pass to Maps component\r\n    listGyms(){\r\n        if(this.props.openMats === undefined) return []\r\n\r\n        this.props.refreshMap(true)\r\n\r\n        let gymResults= [] //will store an array of objects, each object has a 'id', 'lat', 'lng' and 'name' key\r\n\r\n        this.props.openMats.forEach(mat=>{\r\n            let newGym = true //gets set to false if the gym is found in the gymResults array\r\n            gymResults.forEach(gym=>{\r\n                if(gym.name===mat.name) newGym=false\r\n            })\r\n            if(newGym===true){ //if gym is not found in the gymResults array, add it\r\n                gymResults.push({name: mat.name, id:mat.gym_id, lat: mat.lat, lng: mat.lng})\r\n            }\r\n        })\r\n\r\n        return gymResults\r\n    }\r\n\r\n    renderResults(size){\r\n        if(!this.props.openMats) return null\r\n\r\n        if(!this.props.openMats.length) return (\r\n            <div className='text-center'>\r\n                No Open Mats Found for {this.searchTerm}\r\n            </div>\r\n        )\r\n\r\n        // return this.props.openMats.map(el=>{\r\n        //     return(\r\n        //         <CustomOpenMatCard size={size} key={el.id} mat={el}></CustomOpenMatCard>\r\n        //     )\r\n        // })\r\n\r\n        let matResults = this.props.openMats.map(el=>{\r\n            return(\r\n                <CustomOpenMatCard size={size} key={el.id} mat={el}></CustomOpenMatCard>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div style={{position:'relative', zIndex:'10'}}>\r\n                {matResults}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderLargeResults(){\r\n        return(\r\n            <>\r\n                <div className='container-fluid'>\r\n                    <div className='row'>\r\n                        <div className='col-8'>\r\n                            <div className='display-4 text-center my-4'>{this.props.openMats.length ? `Search Results (${this.props.openMats.length})` : 'Search Results'}</div>\r\n                            <div className='text-center mt-2 mb-4'>\r\n                                <Link to='/advancedSearch'>Advanced Search</Link>\r\n                            </div>\r\n                            {/* //this.renderGyms() returns a list of gyms from search results along with how many open mats were found at each one */}\r\n                            {/* {this.renderGyms()} */}\r\n                        </div>\r\n                        <div className='col-4 d-flex align-items-center'>\r\n                            {/*V2: Sort By  */}\r\n                            {/*V2: Show Which Filters Are Applied  */}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-7'>\r\n                            <div>\r\n                                {this.renderResults()}\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 px-0'>\r\n                            <div className='sticky-top'>\r\n                                {this.props.openMats.length ? <Map gyms={this.listGyms()}/> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderMediumResults(){\r\n        return(\r\n            <>\r\n                <div className='container-fluid'>\r\n                    <div>\r\n                        <div className='display-4 text-center my-4'>{this.props.openMats.length ? `Search Results (${this.props.openMats.length})` : 'Search Results'}</div>\r\n                        {/* //this.renderGyms() returns a list of gyms from search results along with how many open mats were found at each one */}\r\n                        {/* {this.renderGyms()} */}\r\n                        {this.props.openMats.length ? \r\n                        <div style={{height:'55vh'}}>\r\n                        {/* <div style={{height:'55vh'}}> */}\r\n                        {/* <div className='sticky-top'> */}\r\n                            {this.props.openMats.length ? <Map customMapStyles={{width:'75%',height: '50vh'}} gyms={this.listGyms()}/> : null}\r\n                        </div>\r\n                        : null}\r\n                        {this.renderResults()}\r\n                        <div className='text-center my-2'>\r\n                            <Link to='/advancedSearch'>Advanced Search</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderSmallResults(){\r\n        return(\r\n            <>\r\n                <div className='container-fluid'>\r\n                    <div>\r\n                        <div className='display-4 text-center my-4'>{this.props.openMats.length ? `Search Results (${this.props.openMats.length})` : 'Search Results'}</div>\r\n                        {/* //this.renderGyms() returns a list of gyms from search results along with how many open mats were found at each one */}\r\n                        {/* {this.renderGyms()} */}\r\n                        {this.props.openMats.length ? \r\n                        <div style={{height:'55vh'}}>\r\n                        {/* <div style={{height:'55vh'}}> */}                        {/* <div className='sticky-top'> */}\r\n                            {this.props.openMats.length ? <Map customMapStyles={{width:'75%',height: '50vh'}} gyms={this.listGyms()}/> : null}\r\n                        </div>\r\n                        : null}\r\n                        {this.renderResults('small')}\r\n                        <div className='text-center my-2'>\r\n                            <Link to='/advancedSearch'>Advanced Search</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderSize(){\r\n        if(this.props.screenSize>breakpoints.medium) return this.renderLargeResults()\r\n        if(this.props.screenSize>breakpoints.small) return this.renderMediumResults()\r\n        else return this.renderSmallResults()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.renderSize()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        screenSize: state.screenSize,\r\n        openMats : state.openMats,\r\n        searchOptions: state.searchOptions\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{searchOpenmats, getGyms, refreshMap })(SearchResults)","export default ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleApiWrapper } from 'google-maps-react'\r\n\r\nimport { refreshMap, setSearchOptions } from '../../actions'\r\n\r\nimport geocoder from '../../utilities/geocoder'\r\nimport days from '../../config/days'\r\n\r\nclass AdvancedSearch extends React.Component {\r\n    state = {\r\n        searchTerm : '',\r\n        distance: 50,\r\n        day: '',\r\n        //the remaining values are from checkboxes and will be true or false\r\n        timeMorning: '', \r\n        timeDay: '',\r\n        timeEvening: '',\r\n        gi: '',\r\n        nogi: '',\r\n        // mixed: '',\r\n        free: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.title = \"OpenMats.org | Advanced Search\"\r\n    }\r\n\r\n    submitSearch = e => {\r\n        e.preventDefault()\r\n\r\n        //this makes sure the map is rerendered on subsequent searches, otherwise it will be centered on the last search\r\n        this.props.refreshMap(true)\r\n\r\n        //adds search options to store\r\n        this.props.setSearchOptions(this.state)\r\n\r\n        //do geocoding, results are set to localStorage\r\n        let geoConstructor = new window.google.maps.Geocoder()\r\n        geocoder(geoConstructor, this.state.searchTerm, this.props.history, this.state)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form className='form' onSubmit={e=>this.submitSearch(e)}>\r\n                    <div className='form-group row'>\r\n                        <label className='col-sm-2 col-form-label' htmlFor='day-input'>Location</label>\r\n                        <div className='col-sm-6'>\r\n                            <input className='form-control' id='day-input' type='text' placeholder='Enter Location' required  value={this.state.searchTerm} onChange={e=>this.setState({searchTerm: e.target.value})}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-group row'>\r\n                        <label className='col-sm-2 col-form-label' htmlFor='distance-input'>Distance</label>\r\n                        <div className='col-sm-6 d-flex align-items-center'>\r\n                            <input className='form-control' id='distance-input' type='range' min='0' max='200' value={this.state.distance} onChange={e=>this.setState({distance: e.target.value})}></input>\r\n                            <div style={{width:'25%', textAlign:'end'}}>{this.state.distance} Miles</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-group row'>\r\n                        <label className='col-sm-2 col-form-label' htmlFor='day-input'>Day</label>\r\n                        <div className='col-sm-6'>\r\n                            <select className='form-control' id='day-input' value={this.state.day} onChange={e=>this.setState({day: e.target.value})}>\r\n                                <option value='' defaultValue>Select Day</option>\r\n                                {days.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-group row'>\r\n                        <div className='col-sm-2'>Time</div>\r\n                        <div className='col-sm-6'>\r\n                            <div className='form-check'>\r\n                                <input className='form-check-input' type='checkbox' id='time-1' onChange={e=>this.setState({timeMorning: !this.state.timeMorning})}></input>\r\n                                <label className='form-check-label' htmlFor='time-1'>Morning (before 11:00)</label>\r\n                            </div>\r\n                            <div className='form-check'>\r\n                                <input className='form-check-input' type='checkbox' id='time-2' onChange={e=>this.setState({timeDay: !this.state.timeDay})}></input>\r\n                                <label className='form-check-label' htmlFor='time-2'>Day (11:00 - 4:00)</label>\r\n                            </div>\r\n                            <div className='form-check'>\r\n                                <input className='form-check-input' type='checkbox' id='time-3' onChange={e=>this.setState({timeEvening: !this.state.timeEvening})}></input>\r\n                                <label className='form-check-label' htmlFor='time-3'>Evening (after 4:00)</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-group row'>\r\n                        <div className='col-sm-2'>Gi or No-Gi</div>\r\n                        <div className='col-sm-6'>\r\n                            <div className='form-check'>\r\n                                <input className='form-check-input' type='checkbox' id='gi-1' onChange={e=>this.setState({gi: !this.state.gi})}></input>\r\n                                <label className='form-check-label' htmlFor='gi-1'>Gi</label>\r\n                            </div>\r\n                            <div className='form-check'>\r\n                                <input className='form-check-input' type='checkbox' id='gi-2' onChange={e=>this.setState({nogi: !this.state.nogi})}></input>\r\n                                <label className='form-check-label' htmlFor='gi-2'>No-Gi</label>\r\n                            </div>\r\n                            {/* <div className='form-check'>\r\n                                <input className='form-check-input' type='checkbox' id='gi-3' onChange={e=>this.setState({mixed: !this.state.mixed})}></input>\r\n                                <label className='form-check-label' htmlFor='gi-3'>Mixed</label>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-group row'>\r\n                        <div className='col-sm-2'>Cost</div>\r\n                        <div className='col-sm-6'>\r\n                            <div className='form-check'>\r\n                                <input className='form-check-input' type='checkbox' id='cost' onChange={e=>this.setState({free: !this.state.free})}></input>\r\n                                <label className='form-check-label' htmlFor='cost'>Free</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className='btn btn-primary my-3'>Search</button>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst googleMapsKey = process.env.NODE_ENV==='production' ? process.env.REACT_APP_googleMapsAPIKey : process.env.REACT_APP_googleMapsAPIKey_dev\r\n\r\nexport default connect(null,{ refreshMap, setSearchOptions })(GoogleApiWrapper({apiKey:googleMapsKey})(AdvancedSearch))","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { openModal } from '../actions'\r\n\r\nclass EditButton extends React.Component {\r\n\r\n\r\n    onButtonClick = (e) => {\r\n        e.preventDefault()\r\n        //if a user is logged in, let them update\r\n        if(this.props.user){\r\n            //edit button is used for both mats and gyms\r\n            this.props.matId ? this.props.history.push(`/openmats/${this.props.matId}/edit`) : this.props.history.push(`/gyms/${this.props.gymId}/edit`)\r\n        }\r\n        //if a user is not logged in, send them to login screen\r\n        else this.props.openModal('login',true)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <button type='button' className={`btn btn-warning btn-sm ${this.props.formatting}`} onClick={this.onButtonClick}><span className='fa fa-pencil mr-2'></span>{this.props.buttonText ? this.props.buttonText : 'Edit'}</button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        user: state.user\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{openModal})(withRouter(EditButton))","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { openModal } from '../actions'\r\n\r\nclass ConfirmDeleteModal extends React.Component {\r\n\r\n    onTriggerClick = () => {   \r\n        //user alredy has to be logged in to reach edit page. check if user who created the mat is the same one who's trying to delete it\r\n        if(this.props.user.id !== this.props.createdBy && this.props.user.id !== 1) alert('You must be the person who created this post in order to delete it. If you would still like it to be removed, please contact us via the contact page. Thanks!')\r\n        else this.props.openModal('delete',true) //if correct user (or admin) then open the delete modal so they can choose to delete or not\r\n    }\r\n\r\n    onDeleteClick = async () => {\r\n        this.props.openModal('delete', false)\r\n\r\n        //if mat, delete mat\r\n        if(this.props.mat){\r\n            const response = await axios.delete(`/api/openmats/${this.props.mat.id}`)\r\n            if(response.status===200){\r\n                alert('Open Mat Deleted Successfully')\r\n            }else{\r\n                alert('Problem Deleting Open Mat')\r\n            }\r\n            this.props.history.push(`/gyms/${this.props.mat.gym_id}`)\r\n        }else{ //else delete gym\r\n            const response = await axios.delete(`/api/gyms/${this.props.gym.gym_id}`)\r\n            if(response.status===200){\r\n                alert('Gym Deleted Successfully')\r\n            }else{\r\n                alert('Problem Deleting Gym')\r\n            }            \r\n            this.props.history.push(`/`)        \r\n        }\r\n    }\r\n\r\n    onCancelClick = () => {\r\n        this.props.openModal('delete', false)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Button className='btn btn-danger btn-sm' variant=\"primary\" onClick={this.onTriggerClick}>\r\n                <span className='fa fa-trash-o mr-2'></span>Delete\r\n            </Button>\r\n      \r\n            <Modal show={this.props.isOpen} onHide={()=>this.props.openModal('delete', false)} size='md'>\r\n                <Modal.Body>\r\n                    <div className='text-center' style={{width:'60%', margin:'0 auto'}}>                                    \r\n                        <p className='mb-4'>Are you sure you want to delete {this.props.mat ? 'this open mat?' : this.props.gym.name + '? All open mats associated with it will also be deleted.'}</p>\r\n\r\n                        <div className='d-flex justify-content-around'>\r\n                            <Button className='btn btn-danger px-4' onClick={this.onDeleteClick}>Yes</Button>\r\n                            <Button className='btn btn-secondary px-4' onClick={this.onCancelClick}>No</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        isOpen: state.openModal.delete,\r\n        user: state.user\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{openModal})(withRouter(ConfirmDeleteModal))","//formats timestamp into readable date\r\nexport default d => {\r\n\r\n    let date = new Date(d).toString()\r\n\r\n    date = date.slice(4,15)\r\n\r\n    //adds comma between day and year\r\n    date = date.slice(0,6) + ', ' + date.slice(6,15)\r\n\r\n    //removes 0 if present in day\r\n    if(date[4] === '0') date = date.slice(0,4) + date.slice(5,17)\r\n\r\n    return date\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport { showOpenmat, clearPrevious } from '../../actions'\r\n\r\nimport EditButton from '../EditButton'\r\nimport ConfirmDeleteModal from '../ConfirmDeleteModal'\r\nimport Map from '../Map'\r\n\r\nimport formatTime from '../../utilities/formatTime'\r\nimport formatDate from '../../utilities/formatDate'\r\nimport breakPoints from '../../config/breakPoints'\r\n\r\nclass MatDetail extends React.Component {\r\n\r\n    componentDidMount(){\r\n        document.title = 'OpenMats.org'\r\n        //clear any previous details so they don't appear while new mat details are being fetched\r\n        this.props.clearPrevious()\r\n        //fetch details for chosen mat\r\n        this.props.showOpenmat(this.props.match.params.id)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //update title after fetching data if it hasn't already been updated\r\n        if(document.title==='OpenMats.org' && this.props.mat && this.props.mat.name) document.title = `OpenMats.org | ${this.props.mat.name}`\r\n        if(this.props.mat) formatDate(this.props.mat.last_updated)\r\n    }\r\n\r\n    formatGiNogi = ginogi => {\r\n        switch(ginogi){\r\n            case(1):\r\n                return 'Gi'\r\n            case(2):\r\n                return 'No-Gi'\r\n            case(3):\r\n                return 'Mixed Gi/No-Gi'\r\n            case(4):\r\n                return 'Alternates Gi/No-Gi'\r\n            default:\r\n                return 'Unknown'\r\n        }\r\n    }\r\n\r\n    formatSize = size => {\r\n        switch(size){\r\n            case('S'):\r\n                return 'Usually less than 10 people'\r\n            case('M'):\r\n                return 'Usually 10-20 people'\r\n            case('L'):\r\n                return 'Usually 20-30 people'\r\n            case('XL'):\r\n                return 'Usually 30+ people'\r\n            default:\r\n                return 'Unknown'\r\n        }\r\n    }\r\n\r\n    formatCost = cost => {\r\n        if(cost===0) return 'Free'\r\n        if(cost>0) return `$${cost}`\r\n        else return 'Unknown'\r\n    }\r\n\r\n    formatCallFirst = call => {\r\n        if(call===0) return 'No need, just show up!'\r\n        if(call===1) return 'Yes, please call ahead.'\r\n        else return 'Unknown'\r\n    }\r\n\r\n    renderTable(){\r\n        //which fields to display in tables\r\n        const fields = ['time','gi_no_gi','size','cost','notes']\r\n\r\n        return(\r\n            <tr className='pointer-on-hover' key={this.props.mat.id} onClick={()=>this.props.history.push(`/openmats/${this.props.mat.id}`)}>\r\n                <td>{this.props.mat.day} {formatTime(this.props.mat.time)}</td>\r\n                <td>{this.formatGiNogi(this.props.mat.gi_nogi)}</td>\r\n                <td>{this.formatSize(this.props.mat.size)}</td>\r\n                <td>{this.formatCost(this.props.mat.cost)}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    renderFooter(mat){\r\n        if(this.props.screenSize > breakPoints.small) return(\r\n            <>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n                <p className='mx-4 my-0'>Last Updated: {formatDate(mat.last_updated)}</p>\r\n                <div>\r\n                    <EditButton formatting='mr-4' matId = {this.props.mat.id}/>\r\n                    <ConfirmDeleteModal createdBy = {this.props.mat.mat_created_by} mat={this.props.mat}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n        else return(\r\n            <>\r\n            <div>\r\n                <div className='my-3'>\r\n                    <EditButton formatting='mr-4' matId = {this.props.mat.id}/>\r\n                    <ConfirmDeleteModal createdBy = {this.props.mat.mat_created_by} mat={this.props.mat}/>\r\n                </div>\r\n                <p>Last Updated: {formatDate(mat.last_updated)}</p>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    renderDetails(){\r\n        const mat = this.props.mat\r\n\r\n        return(\r\n            <div className='container'>\r\n                <table className='table table-bordered'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope='row'>Gym</th>\r\n                            <td><Link to={`/gyms/${mat.gym_id}`} className='plain-link'>{mat.name}</Link></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope='row'>Time</th>\r\n                            <td>{mat.day} {formatTime(mat.time)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope='row'>Address</th>\r\n                            <td>{mat.street} {mat.city}, {mat.state}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope='row'>Phone</th>\r\n                            <td>{mat.phone}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{width:'8rem'}} scope='row'>Gi or No-Gi</th>\r\n                            <td>{this.formatGiNogi(mat.gi_nogi)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope='row'>Size</th>\r\n                            <td>{this.formatSize(mat.size)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope='row'>Cost</th>\r\n                            <td>{this.formatCost(mat.cost)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope='row'>Call First?</th>\r\n                            <td>{this.formatCallFirst(mat.call_first)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope='row'>Notes</th>\r\n                            <td>{mat.notes}</td>\r\n                        </tr>  \r\n                    </tbody>\r\n                </table>\r\n                {this.renderFooter(mat)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.mat) return <div></div>\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <Link to={`/gyms/${this.props.mat.gym_id}`} className='plain-link'><div className='display-4 text-center my-4'>Open Mat at {this.props.mat.name}</div></Link>\r\n                    <Link to={`/gyms/${this.props.mat.gym_id}`}><div style={{fontSize:'1.2rem'}} className='text-center mb-4'>See all open mats at this location</div></Link>\r\n                    <div>\r\n                        {this.renderDetails()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        screenSize: state.screenSize,\r\n        mat: state.matDetails //single open mat along with gym info\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{showOpenmat, clearPrevious})(withRouter(MatDetail))","//for adding a new open mat\r\n\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { openModal } from '../actions'\r\n\r\nclass AddButton extends React.Component {\r\n\r\n\r\n    onButtonClick = (e) => {\r\n        e.preventDefault()\r\n        //if a user is logged in, let them add\r\n        if(this.props.user){\r\n            this.props.history.push(`/openmats/${this.props.gymId}/new`)\r\n        }\r\n        //if a user is not logged in, send them to login screen\r\n        else this.props.openModal('login',true)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <button className='btn btn-primary btn-sm' onClick={this.onButtonClick}><span className='fa fa-plus mr-2'></span>{this.props.buttonText ? this.props.buttonText : 'Edit'}</button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        user: state.user\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{openModal})(withRouter(AddButton))","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { showGym, clearPrevious } from '../../actions'\r\n\r\nimport AddButton from '../AddButton'\r\nimport EditButton from '../EditButton'\r\nimport Map from '../Map'\r\n\r\nimport formatTime from '../../utilities/formatTime'\r\nimport breakPoints from '../../config/breakPoints'\r\n\r\nclass GymDetail extends React.Component {\r\n\r\n    componentDidMount(){\r\n        document.title = 'OpenMats.org'\r\n        //clear any previous details so they don't appear while new gym details are being fetched\r\n        this.props.clearPrevious()\r\n        //fetch details for chosen gym\r\n        this.props.showGym(this.props.match.params.id)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //update title after fetching data if it hasn't already been updated\r\n        if(document.title==='OpenMats.org' && this.props.gym && this.props.gym[0].name) document.title = `OpenMats.org | ${this.props.gym[0].name}`\r\n    }\r\n\r\n    formatImage = imageUrl => {\r\n        if(imageUrl){\r\n            return(\r\n                <img className='card-img-top border-bottom' style={{height:'40vh'}} src={this.props.gym[0].photo} onError={(e)=>{e.target.onerror=null;e.target.src='https://i.imgur.com/PaAB0sq.jpg'}} alt='gym'></img>\r\n            )\r\n        }else{\r\n            return(\r\n                <img className='card-img-top border-bottom' style={{height:'40vh'}} src={'https://i.imgur.com/PaAB0sq.jpg'} alt='gym'></img>\r\n            )\r\n        }\r\n    }\r\n\r\n    formatGiNogi = ginogi => {\r\n        switch(ginogi){\r\n            case(1):\r\n                return 'Gi'\r\n            case(2):\r\n                return 'No-Gi'\r\n            case(3):\r\n                return 'Mixed Gi/No-Gi'\r\n            case(4):\r\n                return 'Alternates Gi/No-Gi'\r\n            default:\r\n                return 'Unknown'\r\n        }\r\n    }\r\n\r\n    formatSize = size => {\r\n        switch(size){\r\n            case('S'):\r\n                return '< 10 people'\r\n            case('M'):\r\n                return '10-20 people'\r\n            case('L'):\r\n                return '20-30 people'\r\n            case('XL'):\r\n                return '30+ people'\r\n            default:\r\n                return 'Unknown'\r\n        }\r\n    }\r\n\r\n    formatCost = cost => {\r\n        if(cost===0) return 'Free'\r\n        if(cost>0) return `$${cost}`\r\n        else return 'Unknown'\r\n    }\r\n\r\n    renderTable(){\r\n        return this.props.gym.map(el=>{\r\n            return(\r\n                <tr className='pointer-on-hover' key={el.id} onClick={()=>this.props.history.push(`/openmats/${el.id}`)}>\r\n                    <td>{el.day} {formatTime(el.time)}</td>\r\n                    <td>{this.formatGiNogi(el.gi_nogi)}</td>                    \r\n                    {this.props.screenSize > breakPoints.small ? <td>{this.formatSize(el.size)}</td> : null}\r\n                    <td>{this.formatCost(el.cost)}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderHeader(gym){\r\n        if(this.props.screenSize > breakPoints.medium){\r\n            return(\r\n                <div className='d-flex justify-content-around'>\r\n                    <p className='card-text'><i className='far fa-map mr-2'></i><a className='plain-link' href={`https://www.google.com/maps/dir/?api=1&destination=${gym.lat},${gym.lng}`} target=\"_blank\">{gym.street} {gym.city}, {gym.state}</a></p>\r\n                    <p className='card-text'><i className='fas fa-phone mr-2'></i>{gym.phone ? gym.phone : 'Unknown'}</p>\r\n                    {gym.website ? <p className='card-text'><a className='plain-link' href={gym.website} target=\"_blank\"><i className='fas fa-globe mr-2'></i>Website</a></p> : null}\r\n                </div>\r\n        // )}if(this.props.screenSize > breakPoints.small){\r\n        //     return(\r\n        //         <>\r\n        //         <div className='d-flex justify-content-around'>\r\n        //             <p className='card-text'><i className='far fa-map mr-2'></i><a className='plain-link' href={`https://www.google.com/maps/dir/?api=1&destination=${gym.lat},${gym.lng}`} target=\"_blank\">{gym.street} {gym.city}, {gym.state}</a></p>\r\n        //         </div>\r\n        //         <div className='d-flex justify-content-around mt-3'>\r\n        //             <p className='card-text'><i className='fas fa-phone mr-2'></i>{gym.phone ? gym.phone : 'Unknown'}</p>\r\n        //             {gym.website ? <p className='card-text'><a className='plain-link' href={gym.website} target=\"_blank\"><i className='fas fa-globe mr-2'></i>Website</a></p> : null}\r\n        //         </div>\r\n        //         </>\r\n        )}else{\r\n            return(\r\n                <div className='text-centered'>\r\n                    <p className='card-text'><i className='far fa-map mr-2'></i><a className='plain-link' href={`https://www.google.com/maps/dir/?api=1&destination=${gym.lat},${gym.lng}`} target=\"_blank\">{gym.street} {gym.city}, {gym.state}</a></p>\r\n                    <p className='card-text'><i className='fas fa-phone mr-2'></i>{gym.phone ? gym.phone : 'Unknown'}</p>\r\n                    {gym.website ? <p className='card-text'><a className='plain-link' href={gym.website} target=\"_blank\"><i className='fas fa-globe mr-2'></i>Website</a></p> : null}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderDetails(){\r\n        const gym = this.props.gym[0]\r\n\r\n        return(\r\n            <div className='card text-center mb-3'>\r\n                {this.formatImage(this.props.gym[0].photo)}\r\n\r\n                {/* <img className='card-img-top border-bottom' style={{height:'40vh'}} src={this.props.gym[0].photo} alt='gym'></img> */}\r\n                <div className='card-body'>\r\n                    {this.renderHeader(gym)}\r\n                </div>\r\n                <table className='table table-hover'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope='col'>Open Mat Time</th>\r\n                            <th scope='col'>Gi or No-Gi</th>\r\n                            {this.props.screenSize > breakPoints.small ? <th scope='col'>Size</th> : null}\r\n                            <th scope='col'>Cost</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTable()}\r\n                    </tbody>\r\n                </table>\r\n                {/* <div className='card-footer text-muted'>\r\n                    Footer\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderLarge(){\r\n        return(\r\n            <div>\r\n                <div className='container-fluid'>\r\n                    <div className='row'>\r\n                        <div className='col-8'>\r\n                            <div className='display-4 text-center my-4'>{this.props.gym[0].name}</div>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row mb-4'>\r\n                        <div className='col-9'>\r\n                            <div>\r\n                                {this.renderDetails()}\r\n                            </div>\r\n                            <div className='d-flex justify-content-between pr-3'>\r\n                                <AddButton gymId={this.props.gym[0].gym_id} buttonText='Add New Open Mat'/>\r\n                                <EditButton gymId={this.props.gym[0].gym_id} buttonText='Edit Gym'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <Map gyms={[this.props.gym[0]]}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderMedium(){\r\n        return(\r\n            <div>\r\n                <div className='container-fluid'>\r\n                    <div style={{height:'35vh'}}>\r\n                        <Map customMapStyles={{width:'658px',height: '30vh'}} gyms={[this.props.gym[0]]}/>\r\n                    </div>\r\n                    <div>\r\n                        {this.renderDetails()}\r\n                    </div>\r\n                    <div className='d-flex justify-content-between pr-3 mb-4'>\r\n                        <AddButton gymId={this.props.gym[0].gym_id} buttonText='Add New Open Mat'/>\r\n                        <EditButton gymId={this.props.gym[0].gym_id} buttonText='Edit Gym'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSmall(){\r\n        return(\r\n            <div>\r\n                <div className='container-fluid'>\r\n                    <div style={{height:'35vh'}}>\r\n                        <Map customMapStyles={{width:'478px',height: '30vh'}} gyms={[this.props.gym[0]]}/>\r\n                    </div>\r\n                    <div>\r\n                        {this.renderDetails()}\r\n                    </div>\r\n                    <div className='d-flex justify-content-between pr-3 mb-4'>\r\n                        <AddButton gymId={this.props.gym[0].gym_id} buttonText='Add New Open Mat'/>\r\n                        <EditButton gymId={this.props.gym[0].gym_id} buttonText='Edit Gym'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.gym) return <div></div>\r\n        if (!this.props.gym[0].id) return <div></div>\r\n        if(this.props.screenSize > breakPoints.medium) return this.renderLarge()\r\n        if(this.props.screenSize > breakPoints.small) return this.renderMedium()\r\n        else return this.renderSmall()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        screenSize: state.screenSize,\r\n        gym: state.gymDetails //array of all open mats associated with one gym and that gyms details\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{showGym, clearPrevious})(withRouter(GymDetail))","export default ['AL', 'AK', 'AS', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FM', 'FL', 'GA', 'GU', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MH', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'MP', 'OH', 'OK', 'OR', 'PW', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY' ]","//adds new gym and mat\r\n\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleApiWrapper } from 'google-maps-react'\r\n\r\nimport { createOpenmat, createGym, resetMatId, getGyms } from '../../actions'\r\nimport breakPoints from '../../config/breakPoints'\r\nimport usStates from '../../config/usStates'\r\nimport days from '../../config/days'\r\n\r\nclass Create extends React.Component {\r\n    //state holds all the form data\r\n    state = {\r\n        gym : {\r\n            name: '',\r\n            street: '',\r\n            city: '',\r\n            state: '',\r\n            phone: '',\r\n            photo: '',\r\n            lat: '',\r\n            lng: ''\r\n        },\r\n        openmat: {\r\n            day: '',\r\n            time: '',\r\n            cost: '',\r\n            call_first: '',\r\n            size: '',\r\n            gi_nogi: '',\r\n            notes: ''\r\n        },\r\n        selectedGym: 0, //this will be 0 till the user either selects a previously entered gym or selects to create a new one. if a previously entered gym is selected, its id will be set here. if a new one is to be created, it will be set to -1\r\n        selectedGymName: '' //this is the name of the selected gym (when state.selectedGym > 0)\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.title = \"OpenMats.org | Add New Open Mat\"\r\n        this.props.getGyms()\r\n    }\r\n\r\n    onFormSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        //if a new gym is to be created:\r\n        if(this.state.selectedGym===-1){\r\n            //perform geocoding to find lat and lng of new gym\r\n            let geocoder = new window.google.maps.Geocoder()\r\n\r\n            geocoder.geocode({address: `${this.state.gym.street}, ${this.state.gym.city}, ${this.state.gym.state}`}, (res, status)=>{\r\n                if(status==='OK'){ //prevents error if google cannot find a location associated with search term\r\n                    let obj = this.state.gym\r\n                    obj.lat = res[0].geometry.location.lat()\r\n                    obj.lng = res[0].geometry.location.lng()\r\n                    this.setState({gym:obj})\r\n                    //this creates a new gym and then creates a new openmat to go with it\r\n                    this.props.createGym(this.state.gym, this.state.openmat)\r\n                }else{\r\n                    alert('Error with finding location - please check street address and city')\r\n                }\r\n            })\r\n        }else{\r\n            //if new gym isn't to be created, just create openmat\r\n            this.props.createOpenmat({...this.state.openmat, gym_id:this.state.selectedGym})\r\n        }\r\n\r\n        // wait till newly created/updated mat has been returned from database, then redirect there\r\n        let interval = setInterval(()=>{\r\n            if(this.props.newMatId){\r\n                this.props.history.push(`/openmats/${this.props.newMatId}`)\r\n                //now set newMatId back to null for next time this is run\r\n                this.props.resetMatId()\r\n                //now end setInterval\r\n                clearInterval(interval)\r\n            }\r\n        },20)\r\n\r\n    }\r\n\r\n    //lists all the previously created gyms to choose from\r\n    renderGymOptions(){\r\n        if(this.props.gyms){\r\n            return this.props.gyms.map(el=><option key={el.id} value={el.id}>{`${el.city}, ${el.state} -  ${el.name}`}</option>)\r\n        }\r\n    }\r\n\r\n    onSelectedGymChange = e =>{\r\n        this.setState({selectedGym:parseInt(e.target.value)})\r\n        //now find the name of the selected gym and set it to state\r\n        this.props.gyms.forEach(el=>{\r\n            if(el.id===parseInt(e.target.value)) this.setState({selectedGymName:el.name})\r\n        })\r\n    }\r\n\r\n    //gives the options to choose from a previously entered gym or creat a new one\r\n    renderSelectGymButton(){\r\n        return(\r\n            <div className='mx-auto' style={this.props.screenSize > breakPoints.medium ? {width:'70%'} : {width:'100%'}}>\r\n                <div className='d-flex align-items-start justify-content-around'>\r\n                    <form style={this.props.screenSize > breakPoints.medium ? {flex:'2'} : {flex:'3'}} className='' onSubmit={e=>e.preventDefault()} autoComplete='off'>\r\n                        <div className='form-group'>\r\n                            <select required className='form-control' type='text' id='chooseGym' value={this.state.selectedGym} onChange={e=>{this.onSelectedGymChange(e)}}>\r\n                            {/* <select required className='form-control' type='text' id='chooseGym' value={this.state.selectedGym} onChange={e=>{this.setState({selectedGym:parseInt(e.target.value)})}}> */}\r\n                                <option value={0} disabled defaultValue>{this.props.screenSize < 500 ? 'Existing Gym' : 'Choose An Existing Gym'}</option>\r\n                                <option value={-1}>Add A New Gym</option>\r\n                                {this.renderGymOptions()}\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                    <h5 style={{flex:'1'}} className='text-center pt-1'>OR</h5>\r\n                    <button className='btn btn-primary' style={this.props.screenSize > breakPoints.medium ? {flex:'1'} : {flex:'2'}} onClick={()=>this.setState({selectedGym:-1})}>{this.props.screenSize < 374 ? 'New Gym' : 'Add New Gym'}</button>\r\n\r\n                    {/* <div className='d-flex justify-content-center' style={this.props.screenSize > breakPoints.medium ? {flex:'1'} : {flex:'2'}}>\r\n                        <button className='btn btn-primary' onClick={()=>this.setState({selectedGym:-1})}>Add New Gym</button>\r\n                    </div>                 */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderLargeForm(){        \r\n        //These parts of the form are only displayed when entering a new gym\r\n        const newGymFields = (\r\n            <>\r\n            <h4 className='text-center mt-4'>Gym Details:</h4>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='name'>Name of Gym:</label>\r\n                    <input required className='form-control' type='text' placeholder='(required)' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'55%'}} className='form-group'>\r\n                    <label htmlFor='street'>Street Address:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='City'>City:</label>\r\n                    <input required className='form-control' type='text' placeholder='(required)' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'17%'}} className='form-group'>\r\n                    <label htmlFor='state'>State:</label>\r\n                    <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                        <option value='' disabled defaultValue>(required)</option>\r\n                        {usStates.map(el=><option key={el}>{el}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div style={{flexBasis:'33%'}} className='form-group'>\r\n                    <label htmlFor='phone'>Phone:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='website'>Website:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'55%'}} className='form-group'>\r\n                    <label htmlFor='photo'>Enter the URL for a photo for this gym:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    {this.state.selectedGym === -1 ? newGymFields : null}\r\n                    {this.state.selectedGym > 0 ? <h4 className='text-center my-4'>Add an Open Mat at {this.state.selectedGymName}:</h4> : <h4 className='text-center my-3'>Open Mat Details:</h4>}\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='day'>Day of the week:</label>\r\n                            <select required className='form-control' id='day' value={this.state.openmat.day} onChange={e=>{let obj = this.state.openmat; obj.day=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(required)</option>\r\n                                {days.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='time'>Time:</label>\r\n                            <input required className='form-control' placeholder='Required' type='time' id='time' value={this.state.openmat.time} onChange={e=>{let obj = this.state.openmat; obj.time=e.target.value; this.setState({openmat:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='cost'>Cost:</label>\r\n                            <input className='form-control' type='number' placeholder='(optional)' id='cost' value={this.state.openmat.cost} onChange={e=>{let obj = this.state.openmat; obj.cost=e.target.value; this.setState({openmat:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='call_first'>Should people call first?</label>\r\n                            <select className='form-control' id='call_first' value={this.state.openmat.call_first} onChange={e=>{let obj = this.state.openmat; obj.call_first=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={0}>No need, just show up!</option>\r\n                                <option value={1}>Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='size'>How many people are usually there?</label>\r\n                            <select className='form-control' id='size' value={this.state.openmat.size} onChange={e=>{let obj = this.state.openmat; obj.size=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value='S'>Small (Less than 10 people)</option>\r\n                                <option value='M'>Medium (10-20 people)</option>\r\n                                <option value='L'>Large (20-30 people)</option>\r\n                                <option value='XL'>Huge (30+ people)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                            <select className='form-control' id='gi_nogi' value={this.state.openmat.gi_nogi} onChange={e=>{let obj = this.state.openmat; obj.gi_nogi=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={1}>Gi</option>\r\n                                <option value={2}>Nogi</option>\r\n                                <option value={3}>Both</option>\r\n                                <option value={4}>Alternates</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>                    \r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openmat.notes} onChange={e=>{let obj = this.state.openmat; obj.notes=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <button className='btn btn-primary'>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderMediumForm(){        \r\n        //These parts of the form are only displayed when entering a new gym\r\n        const newGymFields = (\r\n            <>\r\n            <h4 className='text-center mt-4'>Gym Details:</h4>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='name'>Name of Gym:</label>\r\n                    <input required className='form-control' type='text' placeholder='(required)' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'55%'}} className='form-group'>\r\n                    <label htmlFor='street'>Street Address:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='City'>City:</label>\r\n                    <input required className='form-control' type='text' placeholder='(required)' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'17%'}} className='form-group'>\r\n                    <label htmlFor='state'>State:</label>\r\n                    <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                        <option value='' disabled defaultValue>(required)</option>\r\n                        {usStates.map(el=><option key={el}>{el}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div style={{flexBasis:'33%'}} className='form-group'>\r\n                    <label htmlFor='phone'>Phone:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='website'>Website:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'55%'}} className='form-group'>\r\n                    <label htmlFor='photo'>Enter the URL for a photo for this gym:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    {this.state.selectedGym === -1 ? newGymFields : null}\r\n                    {this.state.selectedGym > 0 ? <h4 className='text-center my-4'>Add an Open Mat at {this.state.selectedGymName}:</h4> : <h4 className='text-center my-3'>Open Mat Details:</h4>}\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='day'>Day of the week:</label>\r\n                            <select required className='form-control' id='day' value={this.state.openmat.day} onChange={e=>{let obj = this.state.openmat; obj.day=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(required)</option>\r\n                                {days.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='time'>Time:</label>\r\n                            <input required className='form-control' placeholder='Required' type='time' id='time' value={this.state.openmat.time} onChange={e=>{let obj = this.state.openmat; obj.time=e.target.value; this.setState({openmat:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='cost'>Cost:</label>\r\n                            <input className='form-control' type='number' placeholder='(optional)' id='cost' value={this.state.openmat.cost} onChange={e=>{let obj = this.state.openmat; obj.cost=e.target.value; this.setState({openmat:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='call_first'>Should people call first?</label>\r\n                            <select className='form-control' id='call_first' value={this.state.openmat.call_first} onChange={e=>{let obj = this.state.openmat; obj.call_first=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={0}>No need, just show up!</option>\r\n                                <option value={1}>Yes</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='size'>How many people are usually there?</label>\r\n                            <select className='form-control' id='size' value={this.state.openmat.size} onChange={e=>{let obj = this.state.openmat; obj.size=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value='S'>Small (Less than 10 people)</option>\r\n                                <option value='M'>Medium (10-20 people)</option>\r\n                                <option value='L'>Large (20-30 people)</option>\r\n                                <option value='XL'>Huge (30+ people)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                            <select className='form-control' id='gi_nogi' value={this.state.openmat.gi_nogi} onChange={e=>{let obj = this.state.openmat; obj.gi_nogi=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={1}>Gi</option>\r\n                                <option value={2}>Nogi</option>\r\n                                <option value={3}>Both</option>\r\n                                <option value={4}>Alternates</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>                    \r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openmat.notes} onChange={e=>{let obj = this.state.openmat; obj.notes=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <button className='btn btn-primary'>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n \r\n    renderSmallForm(){\r\n        //These parts of the form are only displayed when entering a new gym\r\n        const newGymFields = (\r\n            <>\r\n            <h4 className='text-center mt-4'>Details of New Gym:</h4>\r\n            <div className='form-group'>\r\n                <label htmlFor='name'>Name of gym:</label>\r\n                <input required className='form-control' type='text' placeholder='Enter name of gym' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='street'>Street:</label>\r\n                <input className='form-control' type='text' placeholder='Enter street address (optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='City'>City:</label>\r\n                <input required className='form-control' type='text' placeholder='Enter City' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='state'>State:</label>\r\n                <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                    <option value='' disabled defaultValue>Choose State</option>\r\n                    {usStates.map(el=><option key={el}>{el}</option>)}\r\n                </select>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='phone'>Phone:</label>\r\n                <input className='form-control' type='text' placeholder='Enter phone (optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='website'>Website:</label>\r\n                <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='photo'>Photo URL:</label>\r\n                <input className='form-control' type='text' placeholder='Enter photo url (optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    {this.state.selectedGym === -1 ? newGymFields : null}\r\n                    {this.state.selectedGym > 0 ? <h4 className='text-center mt-4'>Add an Open Mat at {this.state.selectedGymName}:</h4> : <h4 className='text-center my-3'>Open Mat Details:</h4>}\r\n                    <div className='form-group'>\r\n                        <label htmlFor='day'>Day of the week:</label>\r\n                        <select required className='form-control' id='day' value={this.state.openmat.day} onChange={e=>{let obj = this.state.openmat; obj.day=e.target.value; this.setState({openmat:obj})}}>\r\n                            <option value='' disabled defaultValue>Choose day of the week</option>\r\n                            {days.map(el=><option key={el}>{el}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='time'>Time:</label>\r\n                        <input required className='form-control' type='time' id='time' value={this.state.openmat.time} onChange={e=>{let obj = this.state.openmat; obj.time=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='cost'>Cost:</label>\r\n                        <input className='form-control' type='number' placeholder='Enter Cost' id='cost' value={this.state.openmat.cost} onChange={e=>{let obj = this.state.openmat; obj.cost=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='call_first'>Should people call first?</label>\r\n                        <select className='form-control' id='call_first' value={this.state.openmat.call_first} onChange={e=>{let obj = this.state.openmat; obj.call_first=e.target.value; this.setState({openmat:obj})}}>\r\n                            <option value='' disabled defaultValue>Call first?</option>\r\n                            <option value={0}>No need, just show up!</option>\r\n                            <option value={1}>Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='size'>How many people are usually there?</label>\r\n                        <select className='form-control' id='size' value={this.state.openmat.size} onChange={e=>{let obj = this.state.openmat; obj.size=e.target.value; this.setState({openmat:obj})}}>\r\n                            <option value='' disabled defaultValue>Size</option>\r\n                            <option value='S'>Small (0-10 people)</option>\r\n                            <option value='M'>Medium (10-20 people)</option>\r\n                            <option value='L'>Large (20-30 people)</option>\r\n                            <option value='XL'>Huge (30+ people)</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                        <select className='form-control' id='gi_nogi' value={this.state.openmat.gi_nogi} onChange={e=>{let obj = this.state.openmat; obj.gi_nogi=e.target.value; this.setState({openmat:obj})}}>\r\n                            <option value='' disabled defaultValue>Gi or Nogi</option>\r\n                            <option value={1}>Gi</option>\r\n                            <option value={2}>Nogi</option>\r\n                            <option value={3}>Both</option>\r\n                            <option value={4}>Alternates</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openmat.notes} onChange={e=>{let obj = this.state.openmat; obj.notes=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <button className='btn btn-primary'>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //this doesn't display anything until the user click to select a previously entered gym or create a new one. It also takes care of breakpoints\r\n    renderForm(){\r\n        if(!this.state.selectedGym) return null\r\n        if(this.props.screenSize>breakPoints.medium) return this.renderLargeForm()\r\n        if(this.props.screenSize>breakPoints.small) return this.renderMediumForm()\r\n        else return this.renderSmallForm()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3 className='my-5 text-center display-4'>{this.props.screenSize > breakPoints.small ? 'Add a New Open Mat' : 'Add New Open Mat'}</h3>\r\n                {this.renderSelectGymButton()}\r\n                {this.renderForm()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        screenSize: state.screenSize,\r\n        newMatId : state.newMatId,\r\n        gyms: state.gyms\r\n    })\r\n}\r\n\r\nconst googleMapsKey = process.env.NODE_ENV==='production' ? process.env.REACT_APP_googleMapsAPIKey : process.env.REACT_APP_googleMapsAPIKey_dev\r\n\r\nexport default connect(mapStateToProps,{ createOpenmat, createGym, resetMatId, getGyms })(GoogleApiWrapper({apiKey:googleMapsKey})(Create))","//adds new mat to gym specified in params\r\n\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleApiWrapper } from 'google-maps-react'\r\n\r\nimport { createOpenmat, createGym, resetMatId, getGyms } from '../../actions'\r\nimport breakPoints from '../../config/breakPoints'\r\nimport usStates from '../../config/usStates'\r\nimport days from '../../config/days'\r\n\r\nclass Create extends React.Component {\r\n    //state holds all the form data\r\n    state = {\r\n        gym : {\r\n            name: '',\r\n            street: '',\r\n            city: '',\r\n            state: '',\r\n            phone: '',\r\n            photo: '',\r\n            lat: '',\r\n            lng: ''\r\n        },\r\n        openmat: {\r\n            day: '',\r\n            time: '',\r\n            cost: '',\r\n            call_first: '',\r\n            size: '',\r\n            gi_nogi: '',\r\n            notes: ''\r\n        },\r\n        selectedGym: 0, //this will be 0 till the user either selects a previously entered gym or selects to create a new one. if a previously entered gym is selected, its id will be set here. if a new one is to be created, it will be set to -1\r\n        selectedGymName: '' //this is the name of the selected gym (when state.selectedGym > 0)\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.title = \"OpenMats.org | Add New Open Mat\"\r\n        this.props.getGyms()\r\n        this.setState({selectedGym:parseInt(this.props.match.params.id)})\r\n        //find the name of the selected gym and set it to state\r\n        this.props.gyms.forEach(el=>{\r\n            if(el.id===parseInt(this.props.match.params.id)) this.setState({selectedGymName:el.name})\r\n        })\r\n    }\r\n\r\n    onFormSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        //if a new gym is to be created:\r\n        if(this.state.selectedGym===-1){\r\n            //perform geocoding to find lat and lng of new gym\r\n            let geocoder = new window.google.maps.Geocoder()\r\n\r\n            geocoder.geocode({address: `${this.state.gym.street}, ${this.state.gym.city}, ${this.state.gym.state}`}, (res, status)=>{\r\n                if(status==='OK'){ //prevents error if google cannot find a location associated with search term\r\n                    let obj = this.state.gym\r\n                    obj.lat = res[0].geometry.location.lat()\r\n                    obj.lng = res[0].geometry.location.lng()\r\n                    this.setState({gym:obj})\r\n                    //this creates a new gym and then creates a new openmat to go with it\r\n                    this.props.createGym(this.state.gym, this.state.openmat)\r\n                }else{\r\n                    alert('Error with finding location - please check street address and city')\r\n                }\r\n            })\r\n        }else{\r\n            //if new gym isn't to be created, just create openmat\r\n            this.props.createOpenmat({...this.state.openmat, gym_id:this.state.selectedGym})\r\n        }\r\n\r\n        // wait till newly created/updated mat has been returned from database, then redirect there\r\n        let interval = setInterval(()=>{\r\n            if(this.props.newMatId){\r\n                this.props.history.push(`/openmats/${this.props.newMatId}`)\r\n                //now set newMatId back to null for next time this is run\r\n                this.props.resetMatId()\r\n                //now end setInterval\r\n                clearInterval(interval)\r\n            }\r\n        },20)\r\n\r\n    }\r\n\r\n    //lists all the previously created gyms to choose from\r\n    renderGymOptions(){\r\n        if(this.props.gyms){\r\n            return this.props.gyms.map(el=><option key={el.id} value={el.id}>{`${el.city}, ${el.state} -  ${el.name}`}</option>)\r\n        }\r\n    }\r\n\r\n    onSelectedGymChange = e =>{\r\n        this.setState({selectedGym:parseInt(e.target.value)})\r\n        //now find the name of the selected gym and set it to state\r\n        this.props.gyms.forEach(el=>{\r\n            if(el.id===parseInt(e.target.value)) this.setState({selectedGymName:el.name})\r\n        })\r\n    }\r\n\r\n    //gives the options to choose from a previously entered gym or creat a new one\r\n    renderSelectGymButton(){\r\n        return(\r\n            <div className='mx-auto' style={this.props.screenSize > breakPoints.medium ? {width:'70%'} : {width:'100%'}}>\r\n                <div className='d-flex align-items-start justify-content-around'>\r\n                    <form style={this.props.screenSize > breakPoints.medium ? {flex:'2'} : {flex:'3'}} className='' onSubmit={e=>e.preventDefault()} autoComplete='off'>\r\n                        <div className='form-group'>\r\n                            <select required className='form-control' type='text' id='chooseGym' value={this.state.selectedGym} onChange={e=>{this.onSelectedGymChange(e)}}>\r\n                            {/* <select required className='form-control' type='text' id='chooseGym' value={this.state.selectedGym} onChange={e=>{this.setState({selectedGym:parseInt(e.target.value)})}}> */}\r\n                                <option value={0} disabled defaultValue>{this.props.screenSize < 500 ? 'Existing Gym' : 'Choose An Existing Gym'}</option>\r\n                                <option value={-1}>Add A New Gym</option>\r\n                                {this.renderGymOptions()}\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                    <h5 style={{flex:'1'}} className='text-center pt-1'>OR</h5>\r\n                    <button className='btn btn-primary' style={this.props.screenSize > breakPoints.medium ? {flex:'1'} : {flex:'2'}} onClick={()=>this.setState({selectedGym:-1})}>{this.props.screenSize < 374 ? 'New Gym' : 'Add New Gym'}</button>\r\n\r\n                    {/* <div className='d-flex justify-content-center' style={this.props.screenSize > breakPoints.medium ? {flex:'1'} : {flex:'2'}}>\r\n                        <button className='btn btn-primary' onClick={()=>this.setState({selectedGym:-1})}>Add New Gym</button>\r\n                    </div>                 */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderLargeForm(){        \r\n        //These parts of the form are only displayed when entering a new gym\r\n        const newGymFields = (\r\n            <>\r\n            <h4 className='text-center mt-4'>Gym Details:</h4>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='name'>Name of Gym:</label>\r\n                    <input required className='form-control' type='text' placeholder='(required)' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'55%'}} className='form-group'>\r\n                    <label htmlFor='street'>Street Address:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='City'>City:</label>\r\n                    <input required className='form-control' type='text' placeholder='(required)' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'17%'}} className='form-group'>\r\n                    <label htmlFor='state'>State:</label>\r\n                    <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                        <option value='' disabled defaultValue>(required)</option>\r\n                        {usStates.map(el=><option key={el}>{el}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div style={{flexBasis:'33%'}} className='form-group'>\r\n                    <label htmlFor='phone'>Phone:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='website'>Website:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'55%'}} className='form-group'>\r\n                    <label htmlFor='photo'>Enter the URL for a photo for this gym:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    {this.state.selectedGym === -1 ? newGymFields : null}\r\n                    {this.state.selectedGym > 0 ? <h4 className='text-center my-4'>Add an Open Mat at {this.state.selectedGymName}:</h4> : <h4 className='text-center my-3'>Open Mat Details:</h4>}\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='day'>Day of the week:</label>\r\n                            <select required className='form-control' id='day' value={this.state.openmat.day} onChange={e=>{let obj = this.state.openmat; obj.day=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(required)</option>\r\n                                {days.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='time'>Time:</label>\r\n                            <input required className='form-control' placeholder='Required' type='time' id='time' value={this.state.openmat.time} onChange={e=>{let obj = this.state.openmat; obj.time=e.target.value; this.setState({openmat:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='cost'>Cost:</label>\r\n                            <input className='form-control' type='number' placeholder='(optional)' id='cost' value={this.state.openmat.cost} onChange={e=>{let obj = this.state.openmat; obj.cost=e.target.value; this.setState({openmat:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='call_first'>Should people call first?</label>\r\n                            <select className='form-control' id='call_first' value={this.state.openmat.call_first} onChange={e=>{let obj = this.state.openmat; obj.call_first=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={0}>No need, just show up!</option>\r\n                                <option value={1}>Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='size'>How many people are usually there?</label>\r\n                            <select className='form-control' id='size' value={this.state.openmat.size} onChange={e=>{let obj = this.state.openmat; obj.size=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value='S'>Small (Less than 10 people)</option>\r\n                                <option value='M'>Medium (10-20 people)</option>\r\n                                <option value='L'>Large (20-30 people)</option>\r\n                                <option value='XL'>Huge (30+ people)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                            <select className='form-control' id='gi_nogi' value={this.state.openmat.gi_nogi} onChange={e=>{let obj = this.state.openmat; obj.gi_nogi=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={1}>Gi</option>\r\n                                <option value={2}>Nogi</option>\r\n                                <option value={3}>Both</option>\r\n                                <option value={4}>Alternates</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>                    \r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openmat.notes} onChange={e=>{let obj = this.state.openmat; obj.notes=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <button className='btn btn-primary'>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderMediumForm(){        \r\n        //These parts of the form are only displayed when entering a new gym\r\n        const newGymFields = (\r\n            <>\r\n            <h4 className='text-center mt-4'>Gym Details:</h4>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='name'>Name of Gym:</label>\r\n                    <input required className='form-control' type='text' placeholder='(required)' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'55%'}} className='form-group'>\r\n                    <label htmlFor='street'>Street Address:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='City'>City:</label>\r\n                    <input required className='form-control' type='text' placeholder='(required)' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'17%'}} className='form-group'>\r\n                    <label htmlFor='state'>State:</label>\r\n                    <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                        <option value='' disabled defaultValue>(required)</option>\r\n                        {usStates.map(el=><option key={el}>{el}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div style={{flexBasis:'33%'}} className='form-group'>\r\n                    <label htmlFor='phone'>Phone:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-between'>\r\n                <div style={{flexBasis:'40%'}} className='form-group'>\r\n                    <label htmlFor='website'>Website:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n                <div style={{flexBasis:'55%'}} className='form-group'>\r\n                    <label htmlFor='photo'>Enter the URL for a photo for this gym:</label>\r\n                    <input className='form-control' type='text' placeholder='(optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    {this.state.selectedGym === -1 ? newGymFields : null}\r\n                    {this.state.selectedGym > 0 ? <h4 className='text-center my-4'>Add an Open Mat at {this.state.selectedGymName}:</h4> : <h4 className='text-center my-3'>Open Mat Details:</h4>}\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='day'>Day of the week:</label>\r\n                            <select required className='form-control' id='day' value={this.state.openmat.day} onChange={e=>{let obj = this.state.openmat; obj.day=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(required)</option>\r\n                                {days.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='time'>Time:</label>\r\n                            <input required className='form-control' placeholder='Required' type='time' id='time' value={this.state.openmat.time} onChange={e=>{let obj = this.state.openmat; obj.time=e.target.value; this.setState({openmat:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='cost'>Cost:</label>\r\n                            <input className='form-control' type='number' placeholder='(optional)' id='cost' value={this.state.openmat.cost} onChange={e=>{let obj = this.state.openmat; obj.cost=e.target.value; this.setState({openmat:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='call_first'>Should people call first?</label>\r\n                            <select className='form-control' id='call_first' value={this.state.openmat.call_first} onChange={e=>{let obj = this.state.openmat; obj.call_first=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={0}>No need, just show up!</option>\r\n                                <option value={1}>Yes</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='size'>How many people are usually there?</label>\r\n                            <select className='form-control' id='size' value={this.state.openmat.size} onChange={e=>{let obj = this.state.openmat; obj.size=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value='S'>Small (Less than 10 people)</option>\r\n                                <option value='M'>Medium (10-20 people)</option>\r\n                                <option value='L'>Large (20-30 people)</option>\r\n                                <option value='XL'>Huge (30+ people)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                            <select className='form-control' id='gi_nogi' value={this.state.openmat.gi_nogi} onChange={e=>{let obj = this.state.openmat; obj.gi_nogi=e.target.value; this.setState({openmat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={1}>Gi</option>\r\n                                <option value={2}>Nogi</option>\r\n                                <option value={3}>Both</option>\r\n                                <option value={4}>Alternates</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>                    \r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openmat.notes} onChange={e=>{let obj = this.state.openmat; obj.notes=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <button className='btn btn-primary'>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n \r\n    renderSmallForm(){\r\n        //These parts of the form are only displayed when entering a new gym\r\n        const newGymFields = (\r\n            <>\r\n            <h4 className='text-center mt-4'>Details of New Gym:</h4>\r\n            <div className='form-group'>\r\n                <label htmlFor='name'>Name of gym:</label>\r\n                <input required className='form-control' type='text' placeholder='Enter name of gym' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='street'>Street:</label>\r\n                <input className='form-control' type='text' placeholder='Enter street address (optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='City'>City:</label>\r\n                <input required className='form-control' type='text' placeholder='Enter City' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='state'>State:</label>\r\n                <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                    <option value='' disabled defaultValue>Choose State</option>\r\n                    {usStates.map(el=><option key={el}>{el}</option>)}\r\n                </select>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='phone'>Phone:</label>\r\n                <input className='form-control' type='text' placeholder='Enter phone (optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='website'>Website:</label>\r\n                <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label htmlFor='photo'>Photo URL:</label>\r\n                <input className='form-control' type='text' placeholder='Enter photo url (optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    {this.state.selectedGym === -1 ? newGymFields : null}\r\n                    {this.state.selectedGym > 0 ? <h4 className='text-center my-4'>Add an Open Mat at {this.state.selectedGymName}:</h4> : <h4 className='text-center my-3'>Open Mat Details:</h4>}\r\n                    <div className='form-group'>\r\n                        <label htmlFor='day'>Day of the week:</label>\r\n                        <select required className='form-control' id='day' value={this.state.openmat.day} onChange={e=>{let obj = this.state.openmat; obj.day=e.target.value; this.setState({openmat:obj})}}>\r\n                            <option value='' disabled defaultValue>Choose day of the week</option>\r\n                            {days.map(el=><option key={el}>{el}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='time'>Time:</label>\r\n                        <input required className='form-control' type='time' id='time' value={this.state.openmat.time} onChange={e=>{let obj = this.state.openmat; obj.time=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='cost'>Cost:</label>\r\n                        <input className='form-control' type='number' placeholder='Enter Cost' id='cost' value={this.state.openmat.cost} onChange={e=>{let obj = this.state.openmat; obj.cost=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='call_first'>Should people call first?</label>\r\n                        <select className='form-control' id='call_first' value={this.state.openmat.call_first} onChange={e=>{let obj = this.state.openmat; obj.call_first=e.target.value; this.setState({openmat:obj})}}>\r\n                            <option value='' disabled defaultValue>Call first?</option>\r\n                            <option value={0}>No need, just show up!</option>\r\n                            <option value={1}>Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='size'>How many people are usually there?</label>\r\n                        <select className='form-control' id='size' value={this.state.openmat.size} onChange={e=>{let obj = this.state.openmat; obj.size=e.target.value; this.setState({openmat:obj})}}>\r\n                            <option value='' disabled defaultValue>Size</option>\r\n                            <option value='S'>Small (0-10 people)</option>\r\n                            <option value='M'>Medium (10-20 people)</option>\r\n                            <option value='L'>Large (20-30 people)</option>\r\n                            <option value='XL'>Huge (30+ people)</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                        <select className='form-control' id='gi_nogi' value={this.state.openmat.gi_nogi} onChange={e=>{let obj = this.state.openmat; obj.gi_nogi=e.target.value; this.setState({openmat:obj})}}>\r\n                            <option value='' disabled defaultValue>Gi or Nogi</option>\r\n                            <option value={1}>Gi</option>\r\n                            <option value={2}>Nogi</option>\r\n                            <option value={3}>Both</option>\r\n                            <option value={4}>Alternates</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openmat.notes} onChange={e=>{let obj = this.state.openmat; obj.notes=e.target.value; this.setState({openmat:obj})}}></input>\r\n                    </div>\r\n                    <button className='btn btn-primary'>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //this doesn't display anything until the user click to select a previously entered gym or create a new one. It also takes care of breakpoints\r\n    renderForm(){\r\n        if(!this.state.selectedGym) return null\r\n        if(this.props.screenSize>breakPoints.medium) return this.renderLargeForm()\r\n        if(this.props.screenSize>breakPoints.small) return this.renderMediumForm()\r\n        else return this.renderSmallForm()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='mt-5'>\r\n                {/* <h3 className='my-5 text-center display-4'>{this.props.screenSize > breakPoints.small ? 'Add a New Open Mat' : 'Add New Open Mat'}</h3> */}\r\n                {/* {this.renderSelectGymButton()} */}\r\n                {this.renderForm()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        screenSize: state.screenSize,\r\n        newMatId : state.newMatId,\r\n        gyms: state.gyms\r\n    })\r\n}\r\n\r\nconst googleMapsKey = process.env.NODE_ENV==='production' ? process.env.REACT_APP_googleMapsAPIKey : process.env.REACT_APP_googleMapsAPIKey_dev\r\n\r\nexport default connect(mapStateToProps,{ createOpenmat, createGym, resetMatId, getGyms })(GoogleApiWrapper({apiKey:googleMapsKey})(Create))","//returns a string in mySQL timestamp format in MST\r\nexport default () => {    \r\n    let MSTdate = new Date();\r\n    MSTdate.setHours(MSTdate.getHours() - 7) // this date will be passed to the put request in 'last_updated', subtracting 7 hours sets it to MST time\r\n\r\n    return MSTdate.toISOString().slice(0, 19).replace('T', ' ')\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport EditButton from '../EditButton'\r\n\r\nimport { showOpenmat, updateOpenmat, resetMatId } from '../../actions'\r\nimport breakPoints from '../../config/breakPoints'\r\nimport days from '../../config/days'\r\nimport sqlDate from '../../utilities/sqlDate'\r\n\r\nclass UpdateMat extends React.Component {\r\n    //state holds all the form data\r\n    state = {\r\n        openMat: {\r\n            day: '',\r\n            time: '',\r\n            cost: '',\r\n            call_first: '',\r\n            size: '',\r\n            gi_nogi: '',\r\n            notes: ''\r\n        }\r\n    }\r\n\r\n    // this will be set to true once the matDetails are set to state in component did update     \r\n    matDetailsSetToState = false\r\n\r\n    componentDidMount(){\r\n        document.title = \"OpenMats.org | Edit\"\r\n        this.props.showOpenmat(this.props.match.params.id)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //update title after fetching data if it hasn't already been updated\r\n        if(document.title==='OpenMats.org | Edit' && this.props.matDetails && this.props.matDetails.name) document.title = `OpenMats.org | Edit ${this.props.matDetails.name}`\r\n        //sets the contents of matDetails to state once matDetails is loaded and it's not the id of any previously loaded data\r\n\r\n        if(!this.matDetailsSetToState && this.props.matDetails && this.props.matDetails.id===this.props.match.params.id){\r\n            //set the values from the open mat to state\r\n            let obj = {}\r\n            for(const val in this.state.openMat){\r\n                if(this.props.matDetails[val]){ //prevents null values from being set to state\r\n                    obj[val] = this.props.matDetails[val]\r\n                }else(\r\n                    obj[val] = ''\r\n                )\r\n            }\r\n            this.setState({openMat:obj})\r\n            this.matDetailsSetToState=true\r\n        }\r\n    }\r\n\r\n    onFormSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        this.props.updateOpenmat({...this.state.openMat, id: this.props.matDetails.id, last_updated_by: this.props.user.id, last_updated: sqlDate()})\r\n\r\n        this.props.history.push(`/openmats/${this.props.matDetails.id}`)\r\n\r\n        // wait till newly created/updated mat has been returned from database, then redirect there\r\n        let interval = setInterval(()=>{\r\n            if(this.props.newMatId){\r\n                this.props.history.push(`/openmats/${this.props.newMatId}`)\r\n                //now set newMatId back to null for next time this is run\r\n                this.props.resetMatId()\r\n                //now end setInterval\r\n                clearInterval(interval)\r\n            }\r\n        },20)\r\n\r\n    }\r\n\r\n\r\n    renderLargeForm(){        \r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='day'>Day of the week:</label>\r\n                            <select required className='form-control' id='day' value={this.state.openMat.day} onChange={e=>{let obj = this.state.openMat; obj.day=e.target.value; this.setState({openMat:obj})}}>\r\n                                <option value='' disabled defaultValue>(required)</option>\r\n                                {days.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='time'>Time:</label>\r\n                            <input required className='form-control' placeholder='Required' type='time' id='time' value={this.state.openMat.time} onChange={e=>{let obj = this.state.openMat; obj.time=e.target.value; this.setState({openMat:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='cost'>Cost:</label>\r\n                            <input className='form-control' type='number' placeholder='(optional)' id='cost' value={this.state.openMat.cost} onChange={e=>{let obj = this.state.openMat; obj.cost=e.target.value; this.setState({openMat:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='call_first'>Should people call first?</label>\r\n                            <select className='form-control' id='call_first' value={this.state.openMat.call_first} onChange={e=>{let obj = this.state.openMat; obj.call_first=e.target.value; this.setState({openMat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={0}>No need, just show up!</option>\r\n                                <option value={1}>Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='size'>How many people are usually there?</label>\r\n                            <select className='form-control' id='size' value={this.state.openMat.size} onChange={e=>{let obj = this.state.openMat; obj.size=e.target.value; this.setState({openMat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value='S'>Small (Less than 10 people)</option>\r\n                                <option value='M'>Medium (10-20 people)</option>\r\n                                <option value='L'>Large (20-30 people)</option>\r\n                                <option value='XL'>Huge (30+ people)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'30%'}} className='form-group'>\r\n                            <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                            <select className='form-control' id='gi_nogi' value={this.state.openMat.gi_nogi} onChange={e=>{let obj = this.state.openMat; obj.gi_nogi=e.target.value; this.setState({openMat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={1}>Gi</option>\r\n                                <option value={2}>Nogi</option>\r\n                                <option value={3}>Both</option>\r\n                                <option value={4}>Alternates</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>                    \r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openMat.notes} onChange={e=>{let obj = this.state.openMat; obj.notes=e.target.value; this.setState({openMat:obj})}}></input>\r\n                    </div>\r\n                    <div className='d-flex justify-content-end'>\r\n                        <EditButton gymId={this.props.matDetails.gym_id} buttonText='Edit This Gym'/>\r\n                        <button type='submit' className='btn btn-primary ml-4'>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderMediumForm(){  \r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='day'>Day of the week:</label>\r\n                            <select required className='form-control' id='day' value={this.state.openMat.day} onChange={e=>{let obj = this.state.openMat; obj.day=e.target.value; this.setState({openMat:obj})}}>\r\n                                <option value='' disabled defaultValue>(required)</option>\r\n                                {days.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='time'>Time:</label>\r\n                            <input required className='form-control' placeholder='Required' type='time' id='time' value={this.state.openMat.time} onChange={e=>{let obj = this.state.openMat; obj.time=e.target.value; this.setState({openMat:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='cost'>Cost:</label>\r\n                            <input className='form-control' type='number' placeholder='(optional)' id='cost' value={this.state.openMat.cost} onChange={e=>{let obj = this.state.openMat; obj.cost=e.target.value; this.setState({openMat:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='call_first'>Should people call first?</label>\r\n                            <select className='form-control' id='call_first' value={this.state.openMat.call_first} onChange={e=>{let obj = this.state.openMat; obj.call_first=e.target.value; this.setState({openMat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={0}>No need, just show up!</option>\r\n                                <option value={1}>Yes</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='size'>How many people are usually there?</label>\r\n                            <select className='form-control' id='size' value={this.state.openMat.size} onChange={e=>{let obj = this.state.openMat; obj.size=e.target.value; this.setState({openMat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value='S'>Small (Less than 10 people)</option>\r\n                                <option value='M'>Medium (10-20 people)</option>\r\n                                <option value='L'>Large (20-30 people)</option>\r\n                                <option value='XL'>Huge (30+ people)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'45%'}} className='form-group'>\r\n                            <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                            <select className='form-control' id='gi_nogi' value={this.state.openMat.gi_nogi} onChange={e=>{let obj = this.state.openMat; obj.gi_nogi=e.target.value; this.setState({openMat:obj})}}>\r\n                                <option value='' disabled defaultValue>(optional)</option>\r\n                                <option value={1}>Gi</option>\r\n                                <option value={2}>Nogi</option>\r\n                                <option value={3}>Both</option>\r\n                                <option value={4}>Alternates</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>                    \r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openMat.notes} onChange={e=>{let obj = this.state.openMat; obj.notes=e.target.value; this.setState({openMat:obj})}}></input>\r\n                    </div>\r\n                    <div className='d-flex justify-content-end'>\r\n                        <EditButton gymId={this.props.matDetails.gym_id} buttonText='Edit This Gym'/>\r\n                        <button type='submit' className='btn btn-primary ml-4'>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n \r\n    renderSmallForm(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='day'>Day of the week:</label>\r\n                        <select required className='form-control' id='day' value={this.state.openMat.day} onChange={e=>{let obj = this.state.openMat; obj.day=e.target.value; this.setState({openMat:obj})}}>\r\n                            <option value='' disabled defaultValue>Choose day of the week</option>\r\n                            {days.map(el=><option key={el}>{el}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='time'>Time:</label>\r\n                        <input required className='form-control' type='time' id='time' value={this.state.openMat.time} onChange={e=>{let obj = this.state.openMat; obj.time=e.target.value; this.setState({openMat:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='cost'>Cost:</label>\r\n                        <input className='form-control' type='number' placeholder='Enter Cost' id='cost' value={this.state.openMat.cost} onChange={e=>{let obj = this.state.openMat; obj.cost=e.target.value; this.setState({openMat:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='call_first'>Should people call first?</label>\r\n                        <select className='form-control' id='call_first' value={this.state.openMat.call_first} onChange={e=>{let obj = this.state.openMat; obj.call_first=e.target.value; this.setState({openMat:obj})}}>\r\n                            <option value='' disabled defaultValue>Call first?</option>\r\n                            <option value={0}>No need, just show up!</option>\r\n                            <option value={1}>Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='size'>How many people are usually there?</label>\r\n                        <select className='form-control' id='size' value={this.state.openMat.size} onChange={e=>{let obj = this.state.openMat; obj.size=e.target.value; this.setState({openMat:obj})}}>\r\n                            <option value='' disabled defaultValue>Size</option>\r\n                            <option value='S'>Small (0-10 people)</option>\r\n                            <option value='M'>Medium (10-20 people)</option>\r\n                            <option value='L'>Large (20-30 people)</option>\r\n                            <option value='XL'>Huge (30+ people)</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='gi_nogi'>Gi or Nogi:</label>\r\n                        <select className='form-control' id='gi_nogi' value={this.state.openMat.gi_nogi} onChange={e=>{let obj = this.state.openMat; obj.gi_nogi=e.target.value; this.setState({openMat:obj})}}>\r\n                            <option value='' disabled defaultValue>Gi or Nogi</option>\r\n                            <option value={1}>Gi</option>\r\n                            <option value={2}>Nogi</option>\r\n                            <option value={3}>Both</option>\r\n                            <option value={4}>Alternates</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='notes'>Notes:</label>\r\n                        <input className='form-control' type='text' placeholder='Anything we should know first?' id='notes' value={this.state.openMat.notes} onChange={e=>{let obj = this.state.openMat; obj.notes=e.target.value; this.setState({openMat:obj})}}></input>\r\n                    </div>\r\n                    <div className='d-flex justify-content-end'>\r\n                        <EditButton gymId={this.props.matDetails.gym_id} buttonText='Edit This Gym'/>\r\n                        <button type='submit' className='btn btn-primary ml-4'>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderForm(){\r\n        if(!this.state.openMat || !this.state.openMat.day) return null\r\n        if(this.props.screenSize>breakPoints.medium) return this.renderLargeForm()\r\n        if(this.props.screenSize>breakPoints.small) return this.renderMediumForm()\r\n        else return this.renderSmallForm()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3 className='my-5 text-center display-4'>Edit Open Mat</h3>\r\n                {this.renderForm()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        screenSize: state.screenSize,\r\n        newMatId : state.newMatId,\r\n        matDetails: state.matDetails,\r\n        user: state.user\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{ showOpenmat, updateOpenmat, resetMatId })(UpdateMat)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleApiWrapper } from 'google-maps-react'\r\n\r\nimport { showGym, updateGym, resetMatId } from '../../actions'\r\nimport breakPoints from '../../config/breakPoints'\r\nimport usStates from '../../config/usStates'\r\n\r\nimport ConfirmDeleteModal from '../ConfirmDeleteModal'\r\n\r\nclass UpdateGym extends React.Component {\r\n    //state holds all the form data\r\n    state = {\r\n        gym : {\r\n            name: '',\r\n            street: '',\r\n            city: '',\r\n            state: '',\r\n            phone: '',\r\n            photo: '',\r\n            website: '',\r\n            lat: '',\r\n            lng: ''\r\n        }\r\n    }\r\n\r\n    //this will be set to true once the gym details are set to state in component did update     \r\n    gymDetailsSetToState = false\r\n\r\n    componentDidMount(){\r\n        document.title = \"OpenMats.org | Edit\"\r\n        this.props.showGym(this.props.match.params.id)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //update title after fetching data if it hasn't already been updated\r\n        if(document.title==='OpenMats.org | Edit' && this.props.gym && this.props.gym[0].name) document.title = `OpenMats.org | Edit ${this.props.gym[0].name}`\r\n        //sets the contents of gym details to state once gym details is loaded and it's not the id of any previously loaded data\r\n\r\n        if(!this.gymDetailsSetToState && this.props.gym && this.props.gym[0].gym_id===parseInt(this.props.match.params.id)){\r\n            //set the values from the gym to state\r\n            let obj = {}\r\n            for(const val in this.state.gym){\r\n                if(this.props.gym[0][val]){ //prevents null values from being set to state\r\n                    obj[val] = this.props.gym[0][val]\r\n                }else(\r\n                    obj[val] = ''\r\n                )\r\n            }\r\n            this.setState({gym:obj})\r\n            this.gymDetailsSetToState=true\r\n        }\r\n    }\r\n\r\n    onFormSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        //if location has changed, perform geocoding:\r\n        if(this.state.gym.street!==this.props.gym[0].street || this.state.gym.city!==this.props.gym[0].city || this.state.gym.state!==this.props.gym[0].state){\r\n            //perform geocoding to find lat and lng of new gym\r\n            let geocoder = new window.google.maps.Geocoder()\r\n\r\n            geocoder.geocode({address: `${this.state.gym.street}, ${this.state.gym.city}, ${this.state.gym.state}`}, (res, status)=>{\r\n                if(status==='OK'){ //prevents error if google cannot find a location associated with search term\r\n                    let obj = this.state.gym\r\n                    obj.lat = res[0].geometry.location.lat()\r\n                    obj.lng = res[0].geometry.location.lng()\r\n                    this.setState({gym:obj})\r\n                    //update gym\r\n                    this.props.updateGym({...this.state.gym, id: this.props.gym[0].gym_id})\r\n                }else{\r\n                    alert('Error with finding location - please check street address and city')\r\n                }\r\n            })\r\n        }else{\r\n            //if no geocoding needed, still update gym\r\n            this.props.updateGym({...this.state.gym, id: this.props.gym[0].gym_id})\r\n        }\r\n\r\n        // wait till newly updated gym has been returned from database, then redirect there\r\n        let interval = setInterval(()=>{\r\n            if(this.props.newMatId){\r\n                this.props.history.push(`/gyms/${this.props.gym[0].gym_id}`)\r\n                //now set newMatId back to null for next time this is run\r\n                this.props.resetMatId()\r\n                //now end setInterval\r\n                clearInterval(interval)\r\n            }\r\n        },20)\r\n    }\r\n\r\n    renderLargeForm(){        \r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'40%'}} className='form-group'>\r\n                            <label htmlFor='name'>Name of Gym:</label>\r\n                            <input required className='form-control' type='text' placeholder='(required)' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'55%'}} className='form-group'>\r\n                            <label htmlFor='street'>Street Address:</label>\r\n                            <input className='form-control' type='text' placeholder='(optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'40%'}} className='form-group'>\r\n                            <label htmlFor='City'>City:</label>\r\n                            <input required className='form-control' type='text' placeholder='(required)' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'17%'}} className='form-group'>\r\n                            <label htmlFor='state'>State:</label>\r\n                            <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                                <option value='' disabled defaultValue>(required)</option>\r\n                                {usStates.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'33%'}} className='form-group'>\r\n                            <label htmlFor='phone'>Phone:</label>\r\n                            <input className='form-control' type='text' placeholder='(optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'40%'}} className='form-group'>\r\n                            <label htmlFor='website'>Website:</label>\r\n                            <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'55%'}} className='form-group'>\r\n                            <label htmlFor='photo'>Enter the URL of a photo for this gym:</label>\r\n                            <input className='form-control' type='text' placeholder='(optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <ConfirmDeleteModal createdBy={this.props.gym[0].gym_created_by} gym={this.props.gym[0]}/>\r\n                        <button className='btn btn-primary'>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n    renderMediumForm(){        \r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'40%'}} className='form-group'>\r\n                            <label htmlFor='name'>Name of Gym:</label>\r\n                            <input required className='form-control' type='text' placeholder='(required)' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'55%'}} className='form-group'>\r\n                            <label htmlFor='street'>Street Address:</label>\r\n                            <input className='form-control' type='text' placeholder='(optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'40%'}} className='form-group'>\r\n                            <label htmlFor='City'>City:</label>\r\n                            <input required className='form-control' type='text' placeholder='(required)' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'17%'}} className='form-group'>\r\n                            <label htmlFor='state'>State:</label>\r\n                            <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                                <option value='' disabled defaultValue>(required)</option>\r\n                                {usStates.map(el=><option key={el}>{el}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div style={{flexBasis:'33%'}} className='form-group'>\r\n                            <label htmlFor='phone'>Phone:</label>\r\n                            <input className='form-control' type='text' placeholder='(optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div style={{flexBasis:'40%'}} className='form-group'>\r\n                            <label htmlFor='website'>Website:</label>\r\n                            <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                        <div style={{flexBasis:'55%'}} className='form-group'>\r\n                            <label htmlFor='photo'>Enter the URL of a photo for this gym:</label>\r\n                            <input className='form-control' type='text' placeholder='(optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <ConfirmDeleteModal createdBy={this.props.gym[0].gym_created_by} gym={this.props.gym[0]}/>\r\n                        <button className='btn btn-primary'>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n \r\n    renderSmallForm(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={e=>this.onFormSubmit(e)} autoComplete='off'>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='name'>Name of gym:</label>\r\n                        <input required className='form-control' type='text' placeholder='Enter name of gym' id='name' value={this.state.gym.name} onChange={e=>{let obj = this.state.gym; obj.name=e.target.value; this.setState({gym:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='street'>Street:</label>\r\n                        <input className='form-control' type='text' placeholder='Enter street address (optional)' id='street' value={this.state.gym.street} onChange={e=>{let obj = this.state.gym; obj.street=e.target.value; this.setState({gym:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='City'>City:</label>\r\n                        <input required className='form-control' type='text' placeholder='Enter City' id='city' value={this.state.gym.city} onChange={e=>{let obj = this.state.gym; obj.city=e.target.value; this.setState({gym:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='state'>State:</label>\r\n                        <select required className='form-control' id='state' value={this.state.gym.state} onChange={e=>{let obj = this.state.gym; obj.state=e.target.value; this.setState({gym:obj})}}>\r\n                            <option value='' disabled defaultValue>Choose State</option>\r\n                            {usStates.map(el=><option key={el}>{el}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='phone'>Phone:</label>\r\n                        <input className='form-control' type='text' placeholder='Enter phone (optional)' id='phone' value={this.state.gym.phone} onChange={e=>{let obj = this.state.gym; obj.phone=e.target.value; this.setState({gym:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='website'>Website:</label>\r\n                        <input className='form-control' type='text' placeholder='(optional)' id='website' value={this.state.gym.website} onChange={e=>{let obj = this.state.gym; obj.website=e.target.value; this.setState({gym:obj})}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='photo'>Photo URL:</label>\r\n                        <input className='form-control' type='text' placeholder='Enter photo url (optional)' id='photo' value={this.state.gym.photo} onChange={e=>{let obj = this.state.gym; obj.photo=e.target.value; this.setState({gym:obj})}}></input>\r\n                    </div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <ConfirmDeleteModal createdBy={this.props.gym[0].gym_created_by} gym={this.props.gym[0]}/>\r\n                        <button className='btn btn-primary'>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderForm(){\r\n        if(!this.props.gym || !this.props.gym[0].name) return null\r\n        if(this.props.screenSize>breakPoints.medium) return this.renderLargeForm()\r\n        if(this.props.screenSize>breakPoints.small) return this.renderMediumForm()\r\n        else return this.renderSmallForm()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3 className='my-5 text-center display-4'>Edit Gym</h3>\r\n                {this.renderForm()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        screenSize: state.screenSize,\r\n        gym: state.gymDetails,\r\n        user: state.user,\r\n        newMatId: state.newMatId\r\n    })\r\n}\r\n\r\nconst googleMapsKey = process.env.NODE_ENV==='production' ? process.env.REACT_APP_googleMapsAPIKey : process.env.REACT_APP_googleMapsAPIKey_dev\r\n\r\nexport default connect(mapStateToProps,{ showGym, updateGym, resetMatId })(GoogleApiWrapper({apiKey:googleMapsKey})(UpdateGym))\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { openModal } from '../../actions'\r\n\r\nclass FailedLogin extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <hr></hr>\r\n                Incorrect username or password. Please click <button className='button-link' onClick={()=>this.props.openModal('login',true)}>here</button> to try again.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{openModal})(FailedLogin)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport { fetchUser, screenResize } from '../actions'\r\n\r\nimport Header from './Header'\r\n// import Footer from './Footer'\r\nimport Home from './pages/Home'\r\nimport About from './pages/About'\r\nimport AllGyms from './pages/AllGyms'\r\nimport SearchResults from './pages/SearchResults'\r\nimport AdvancedSearch from './pages/AdvancedSearch'\r\nimport MatDetail from './pages/MatDetail'\r\nimport GymDetail from './pages/GymDetail'\r\nimport Create from './pages/Create'\r\nimport CreateMat from './pages/CreateMat'\r\nimport UpdateMat from './pages/UpdateMat'\r\nimport UpdateGym from './pages/UpdateGym'\r\nimport FailedLogin from './pages/FailedLogin'\r\n\r\nimport './styles/styles.css'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount(){\r\n        //updates state when window is resized\r\n        window.addEventListener('resize', ()=>{\r\n            this.props.screenResize(window.innerWidth)\r\n        })\r\n\r\n        this.props.fetchUser()\r\n        this.props.screenResize(window.innerWidth)\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>            \r\n                <div className='container'>\r\n                    <BrowserRouter>\r\n                        <Route path='/' component={Header}></Route>\r\n                        <Route path='/' exact component={Home}></Route>\r\n                        <Route path='/about' exact component={About}></Route>\r\n                        <Route path='/allgyms' exact component={AllGyms}></Route>\r\n                        <Route path='/failedLogin' exact component={FailedLogin}></Route>\r\n                        <Route path='/advancedSearch' exact component={AdvancedSearch}></Route>\r\n                        <Switch>\r\n                            <Route path='/gyms/:id' exact component={GymDetail}></Route>\r\n                            <Route path='/gyms/:id/edit' exact component={UpdateGym}></Route>\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route path='/openmats' exact component={SearchResults}></Route>\r\n                            <Route path='/openmats/new' exact component={Create}></Route>\r\n                            <Route path='/openmats/:id' exact component={MatDetail}></Route>\r\n                            <Route path='/openmats/:id/edit' exact component={UpdateMat}></Route>\r\n                            <Route path='/openmats/:id/new' exact component={CreateMat}></Route>\r\n                        </Switch>\r\n                        {/* <Route path='/' component={Footer}></Route> */}\r\n                    </BrowserRouter>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        user: state.user\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchUser, screenResize})(App)\r\n","import { combineReducers } from 'redux'\n\nimport screenResize from './screenResize'\nimport fetchTotals from './fetchTotals'\nimport fetchUser from './fetchUser'\nimport openModal from './openModal'\nimport refreshMap from './refreshMap'\nimport infoWindow from './infoWindow'\nimport setSearchOptions from './setSearchOptions'\nimport searchOpenmats from './searchOpenmats'\nimport newMatId from './newMatId'\nimport showOpenmat from './showOpenmat'\nimport searchGyms from './searchGyms'\nimport showGym from './showGym'\n\nexport default combineReducers({\n    screenSize: screenResize,\n    totals: fetchTotals,\n    user: fetchUser,\n    openModal: openModal,\n    refreshMap: refreshMap,\n    infoWindow: infoWindow,\n    searchOptions: setSearchOptions,\n    openMats: searchOpenmats, //list of all open mats\n    newMatId: newMatId, //id of newly created open mat\n    matDetails: showOpenmat, //fetch single open mat\n    gyms: searchGyms, //list of search results of gyms for area\n    gymDetails: showGym //fetch single gym\n})","import { SCREEN_RESIZE } from '../actions/types'\r\n\r\n//null means waiting for initial response\r\nexport default (state = false, action) => {\r\n    switch(action.type) {\r\n        case (SCREEN_RESIZE):\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { FETCH_TOTALS } from '../actions/types'\n\n//null means waiting for initial response\nexport default (state = {mats:0,gyms:0,states:0}, action) => {\n    switch(action.type) {\n        case (FETCH_TOTALS):\n            if(!action.payload.data) return {mats:0,gyms:0,states:0}\n            return action.payload.data\n        default:\n            return state\n    }\n}","import { FETCH_USER } from '../actions/types'\r\n\r\n//null means waiting for initial response\r\nexport default (state = null, action) => {\r\n    switch(action.type) {\r\n        case (FETCH_USER):\r\n            if(!action.payload.data) return false\r\n            return action.payload.data\r\n        default:\r\n            return state\r\n    }\r\n}","import { OPEN_MODAL } from '../actions/types'\r\n\r\n//sets state to true or false for open state of signup and login modals\r\n//payload is in form of array, with 0 index being 'login or 'signup' and 1 index being boolean stating whether it should be open\r\nexport default (state = {login: false, signup: false}, action) => {\r\n    switch(action.type) {\r\n        case (OPEN_MODAL):\r\n            if(action.payload[0]==='login'){\r\n                //if modal is false, then both modals are closed, if it is true, the second modal is closed since only one should be open at a time\r\n                return action.payload[1]===false ? {login: false, signup: false, delete: false} : {login: true, signup: false, delete: false}\r\n            }else if(action.payload[0]==='signup'){\r\n                return action.payload[1]===false ? {login: false, signup: false, delete: false} : {login: false, signup: true, delete: false}\r\n            }else{\r\n                return action.payload[1]===false ? {login: false, signup: false, delete: false} : {login: false, signup: false, delete: true}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { REFRESH_MAP } from '../actions/types'\r\n\r\n//null means waiting for initial response\r\nexport default (state = false, action) => {\r\n    switch(action.type) {\r\n        case (REFRESH_MAP):\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { INFO_WINDOW } from '../actions/types'\r\n\r\nexport default (state = null, action) => {\r\n    switch(action.type) {\r\n        case (INFO_WINDOW):\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { SET_SEARCH_OPTIONS } from '../actions/types'\r\n\r\n//null means waiting for initial response\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case (SET_SEARCH_OPTIONS):\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { SEARCH_OPENMATS } from '../actions/types'\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type) {\r\n        case (SEARCH_OPENMATS):\r\n            if(action.payload===undefined) return state\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { CREATE_OPENMAT, UPDATE_OPENMAT, UPDATE_GYM, RESET_MAT_ID } from '../actions/types'\r\n\r\nexport default (state = null, action) => {\r\n    switch(action.type) {\r\n        case (CREATE_OPENMAT):\r\n            return action.payload\r\n        case (UPDATE_OPENMAT):\r\n            return action.payload\r\n        case (UPDATE_GYM):\r\n            return action.payload\r\n        case (RESET_MAT_ID):\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}","import { SHOW_OPENMAT, CLEAR_PREVIOUS } from '../actions/types'\r\n\r\nexport default (state = null, action) => {\r\n    switch(action.type) {\r\n        case (SHOW_OPENMAT):\r\n            return action.payload\r\n        case (CLEAR_PREVIOUS):\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { SEARCH_GYMS } from '../actions/types'\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type) {\r\n        case (SEARCH_GYMS):\r\n            if(action.payload===undefined) return state\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { SHOW_GYM, CLEAR_PREVIOUS } from '../actions/types'\r\n\r\nexport default (state = null, action) => {\r\n    switch(action.type) {\r\n        case (SHOW_GYM):\r\n            return action.payload\r\n        case (CLEAR_PREVIOUS):\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport App from './components/App'\r\nimport reducers from './reducers'\r\n\r\n//The following is for Redux DevTools:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}